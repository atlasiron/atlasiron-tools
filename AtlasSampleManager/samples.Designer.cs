//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AtlasSampleManager {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Samples")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Samples : global::System.Data.DataSet {
        
        private gcv_Hole_CollarsDataTable tablegcv_Hole_Collars;
        
        private psm_Product_SamplesDataTable tablepsm_Product_Samples;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Samples() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Samples(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["gcv_Hole_Collars"] != null)) {
                    base.Tables.Add(new gcv_Hole_CollarsDataTable(ds.Tables["gcv_Hole_Collars"]));
                }
                if ((ds.Tables["psm_Product_Samples"] != null)) {
                    base.Tables.Add(new psm_Product_SamplesDataTable(ds.Tables["psm_Product_Samples"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public gcv_Hole_CollarsDataTable gcv_Hole_Collars {
            get {
                return this.tablegcv_Hole_Collars;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public psm_Product_SamplesDataTable psm_Product_Samples {
            get {
                return this.tablepsm_Product_Samples;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Samples cln = ((Samples)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["gcv_Hole_Collars"] != null)) {
                    base.Tables.Add(new gcv_Hole_CollarsDataTable(ds.Tables["gcv_Hole_Collars"]));
                }
                if ((ds.Tables["psm_Product_Samples"] != null)) {
                    base.Tables.Add(new psm_Product_SamplesDataTable(ds.Tables["psm_Product_Samples"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablegcv_Hole_Collars = ((gcv_Hole_CollarsDataTable)(base.Tables["gcv_Hole_Collars"]));
            if ((initTable == true)) {
                if ((this.tablegcv_Hole_Collars != null)) {
                    this.tablegcv_Hole_Collars.InitVars();
                }
            }
            this.tablepsm_Product_Samples = ((psm_Product_SamplesDataTable)(base.Tables["psm_Product_Samples"]));
            if ((initTable == true)) {
                if ((this.tablepsm_Product_Samples != null)) {
                    this.tablepsm_Product_Samples.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Samples";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/samples.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablegcv_Hole_Collars = new gcv_Hole_CollarsDataTable();
            base.Tables.Add(this.tablegcv_Hole_Collars);
            this.tablepsm_Product_Samples = new psm_Product_SamplesDataTable();
            base.Tables.Add(this.tablepsm_Product_Samples);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializegcv_Hole_Collars() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializepsm_Product_Samples() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Samples ds = new Samples();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void gcv_Hole_CollarsRowChangeEventHandler(object sender, gcv_Hole_CollarsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void psm_Product_SamplesRowChangeEventHandler(object sender, psm_Product_SamplesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class gcv_Hole_CollarsDataTable : global::System.Data.TypedTableBase<gcv_Hole_CollarsRow> {
            
            private global::System.Data.DataColumn columnPit;
            
            private global::System.Data.DataColumn columnBench;
            
            private global::System.Data.DataColumn columnShotNo;
            
            private global::System.Data.DataColumn columnHoleNo;
            
            private global::System.Data.DataColumn columnPlanEasting;
            
            private global::System.Data.DataColumn columnPlanNorthing;
            
            private global::System.Data.DataColumn columnPlanElevation;
            
            private global::System.Data.DataColumn columnActualEasting;
            
            private global::System.Data.DataColumn columnActualNorthing;
            
            private global::System.Data.DataColumn columnActualElevation;
            
            private global::System.Data.DataColumn columnInterceptDepth;
            
            private global::System.Data.DataColumn columnBearing;
            
            private global::System.Data.DataColumn columnInclination;
            
            private global::System.Data.DataColumn columnMaterialType;
            
            private global::System.Data.DataColumn columnFe;
            
            private global::System.Data.DataColumn columnSiO2;
            
            private global::System.Data.DataColumn columnAl2O3;
            
            private global::System.Data.DataColumn columnP;
            
            private global::System.Data.DataColumn columnS;
            
            private global::System.Data.DataColumn columnMn;
            
            private global::System.Data.DataColumn columnLOI;
            
            private global::System.Data.DataColumn columnGangue;
            
            private global::System.Data.DataColumn columnLogMatType;
            
            private global::System.Data.DataColumn columnLogOtherMatType;
            
            private global::System.Data.DataColumn columnLogTopMatType;
            
            private global::System.Data.DataColumn columnLogBottomMatType;
            
            private global::System.Data.DataColumn columnLogTopColour;
            
            private global::System.Data.DataColumn columnLogBottomColour;
            
            private global::System.Data.DataColumn columnLogReference;
            
            private global::System.Data.DataColumn columnLogComments;
            
            private global::System.Data.DataColumn columnLoggedUser;
            
            private global::System.Data.DataColumn columnLoggedOn;
            
            private global::System.Data.DataColumn columnLogValidatedOn;
            
            private global::System.Data.DataColumn columnSampleId;
            
            private global::System.Data.DataColumn columnSubmission;
            
            private global::System.Data.DataColumn columnInstructions;
            
            private global::System.Data.DataColumn columnDesignedOn;
            
            private global::System.Data.DataColumn columnDesignedUser;
            
            private global::System.Data.DataColumn columnSelectedOn;
            
            private global::System.Data.DataColumn columnSelectedUser;
            
            private global::System.Data.DataColumn columnSampledOn;
            
            private global::System.Data.DataColumn columnSampledUser;
            
            private global::System.Data.DataColumn columnSubmittedOn;
            
            private global::System.Data.DataColumn columnSubmittedUser;
            
            private global::System.Data.DataColumn columnDespatchedOn;
            
            private global::System.Data.DataColumn columnDespatchedUser;
            
            private global::System.Data.DataColumn columnArrivedForPreparation;
            
            private global::System.Data.DataColumn columnArrivedForPreparationUser;
            
            private global::System.Data.DataColumn columnDespatchedFromPreparationOn;
            
            private global::System.Data.DataColumn columnDespatchedFromPreparationUser;
            
            private global::System.Data.DataColumn columnArrivedForAnalysis;
            
            private global::System.Data.DataColumn columnArrivedForAnalysisUser;
            
            private global::System.Data.DataColumn columnLabJobNo;
            
            private global::System.Data.DataColumn columnReceivedOn;
            
            private global::System.Data.DataColumn columnReceivedUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gcv_Hole_CollarsDataTable() {
                this.TableName = "gcv_Hole_Collars";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal gcv_Hole_CollarsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected gcv_Hole_CollarsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PitColumn {
                get {
                    return this.columnPit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenchColumn {
                get {
                    return this.columnBench;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShotNoColumn {
                get {
                    return this.columnShotNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoleNoColumn {
                get {
                    return this.columnHoleNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlanEastingColumn {
                get {
                    return this.columnPlanEasting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlanNorthingColumn {
                get {
                    return this.columnPlanNorthing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlanElevationColumn {
                get {
                    return this.columnPlanElevation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualEastingColumn {
                get {
                    return this.columnActualEasting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualNorthingColumn {
                get {
                    return this.columnActualNorthing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualElevationColumn {
                get {
                    return this.columnActualElevation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InterceptDepthColumn {
                get {
                    return this.columnInterceptDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BearingColumn {
                get {
                    return this.columnBearing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InclinationColumn {
                get {
                    return this.columnInclination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialTypeColumn {
                get {
                    return this.columnMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FeColumn {
                get {
                    return this.columnFe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SiO2Column {
                get {
                    return this.columnSiO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Al2O3Column {
                get {
                    return this.columnAl2O3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PColumn {
                get {
                    return this.columnP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SColumn {
                get {
                    return this.columnS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MnColumn {
                get {
                    return this.columnMn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOIColumn {
                get {
                    return this.columnLOI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GangueColumn {
                get {
                    return this.columnGangue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogMatTypeColumn {
                get {
                    return this.columnLogMatType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogOtherMatTypeColumn {
                get {
                    return this.columnLogOtherMatType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogTopMatTypeColumn {
                get {
                    return this.columnLogTopMatType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogBottomMatTypeColumn {
                get {
                    return this.columnLogBottomMatType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogTopColourColumn {
                get {
                    return this.columnLogTopColour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogBottomColourColumn {
                get {
                    return this.columnLogBottomColour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogReferenceColumn {
                get {
                    return this.columnLogReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogCommentsColumn {
                get {
                    return this.columnLogComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoggedUserColumn {
                get {
                    return this.columnLoggedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoggedOnColumn {
                get {
                    return this.columnLoggedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogValidatedOnColumn {
                get {
                    return this.columnLogValidatedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleIdColumn {
                get {
                    return this.columnSampleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubmissionColumn {
                get {
                    return this.columnSubmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstructionsColumn {
                get {
                    return this.columnInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DesignedOnColumn {
                get {
                    return this.columnDesignedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DesignedUserColumn {
                get {
                    return this.columnDesignedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedOnColumn {
                get {
                    return this.columnSelectedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedUserColumn {
                get {
                    return this.columnSelectedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampledOnColumn {
                get {
                    return this.columnSampledOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampledUserColumn {
                get {
                    return this.columnSampledUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubmittedOnColumn {
                get {
                    return this.columnSubmittedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubmittedUserColumn {
                get {
                    return this.columnSubmittedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedOnColumn {
                get {
                    return this.columnDespatchedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedUserColumn {
                get {
                    return this.columnDespatchedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForPreparationColumn {
                get {
                    return this.columnArrivedForPreparation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForPreparationUserColumn {
                get {
                    return this.columnArrivedForPreparationUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedFromPreparationOnColumn {
                get {
                    return this.columnDespatchedFromPreparationOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedFromPreparationUserColumn {
                get {
                    return this.columnDespatchedFromPreparationUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForAnalysisColumn {
                get {
                    return this.columnArrivedForAnalysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForAnalysisUserColumn {
                get {
                    return this.columnArrivedForAnalysisUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabJobNoColumn {
                get {
                    return this.columnLabJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivedOnColumn {
                get {
                    return this.columnReceivedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivedUserColumn {
                get {
                    return this.columnReceivedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gcv_Hole_CollarsRow this[int index] {
                get {
                    return ((gcv_Hole_CollarsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gcv_Hole_CollarsRowChangeEventHandler gcv_Hole_CollarsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gcv_Hole_CollarsRowChangeEventHandler gcv_Hole_CollarsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gcv_Hole_CollarsRowChangeEventHandler gcv_Hole_CollarsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gcv_Hole_CollarsRowChangeEventHandler gcv_Hole_CollarsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addgcv_Hole_CollarsRow(gcv_Hole_CollarsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gcv_Hole_CollarsRow Addgcv_Hole_CollarsRow(
                        string Pit, 
                        string Bench, 
                        string ShotNo, 
                        string HoleNo, 
                        double PlanEasting, 
                        double PlanNorthing, 
                        double PlanElevation, 
                        double ActualEasting, 
                        double ActualNorthing, 
                        double ActualElevation, 
                        double InterceptDepth, 
                        double Bearing, 
                        double Inclination, 
                        string MaterialType, 
                        float Fe, 
                        float SiO2, 
                        float Al2O3, 
                        float P, 
                        float S, 
                        float Mn, 
                        float LOI, 
                        float Gangue, 
                        string LogMatType, 
                        string LogOtherMatType, 
                        string LogTopMatType, 
                        string LogBottomMatType, 
                        string LogTopColour, 
                        string LogBottomColour, 
                        string LogReference, 
                        string LogComments, 
                        string LoggedUser, 
                        string LoggedOn, 
                        string LogValidatedOn, 
                        string SampleId, 
                        string Submission, 
                        string Instructions, 
                        System.DateTime DesignedOn, 
                        string DesignedUser, 
                        System.DateTime SelectedOn, 
                        string SelectedUser, 
                        System.DateTime SampledOn, 
                        string SampledUser, 
                        System.DateTime SubmittedOn, 
                        string SubmittedUser, 
                        System.DateTime DespatchedOn, 
                        string DespatchedUser, 
                        System.DateTime ArrivedForPreparation, 
                        string ArrivedForPreparationUser, 
                        System.DateTime DespatchedFromPreparationOn, 
                        string DespatchedFromPreparationUser, 
                        System.DateTime ArrivedForAnalysis, 
                        string ArrivedForAnalysisUser, 
                        string LabJobNo, 
                        System.DateTime ReceivedOn, 
                        string ReceivedUser) {
                gcv_Hole_CollarsRow rowgcv_Hole_CollarsRow = ((gcv_Hole_CollarsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Pit,
                        Bench,
                        ShotNo,
                        HoleNo,
                        PlanEasting,
                        PlanNorthing,
                        PlanElevation,
                        ActualEasting,
                        ActualNorthing,
                        ActualElevation,
                        InterceptDepth,
                        Bearing,
                        Inclination,
                        MaterialType,
                        Fe,
                        SiO2,
                        Al2O3,
                        P,
                        S,
                        Mn,
                        LOI,
                        Gangue,
                        LogMatType,
                        LogOtherMatType,
                        LogTopMatType,
                        LogBottomMatType,
                        LogTopColour,
                        LogBottomColour,
                        LogReference,
                        LogComments,
                        LoggedUser,
                        LoggedOn,
                        LogValidatedOn,
                        SampleId,
                        Submission,
                        Instructions,
                        DesignedOn,
                        DesignedUser,
                        SelectedOn,
                        SelectedUser,
                        SampledOn,
                        SampledUser,
                        SubmittedOn,
                        SubmittedUser,
                        DespatchedOn,
                        DespatchedUser,
                        ArrivedForPreparation,
                        ArrivedForPreparationUser,
                        DespatchedFromPreparationOn,
                        DespatchedFromPreparationUser,
                        ArrivedForAnalysis,
                        ArrivedForAnalysisUser,
                        LabJobNo,
                        ReceivedOn,
                        ReceivedUser};
                rowgcv_Hole_CollarsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgcv_Hole_CollarsRow);
                return rowgcv_Hole_CollarsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gcv_Hole_CollarsRow FindByPitBenchShotNoHoleNo(string Pit, string Bench, string ShotNo, string HoleNo) {
                return ((gcv_Hole_CollarsRow)(this.Rows.Find(new object[] {
                            Pit,
                            Bench,
                            ShotNo,
                            HoleNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                gcv_Hole_CollarsDataTable cln = ((gcv_Hole_CollarsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new gcv_Hole_CollarsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPit = base.Columns["Pit"];
                this.columnBench = base.Columns["Bench"];
                this.columnShotNo = base.Columns["ShotNo"];
                this.columnHoleNo = base.Columns["HoleNo"];
                this.columnPlanEasting = base.Columns["PlanEasting"];
                this.columnPlanNorthing = base.Columns["PlanNorthing"];
                this.columnPlanElevation = base.Columns["PlanElevation"];
                this.columnActualEasting = base.Columns["ActualEasting"];
                this.columnActualNorthing = base.Columns["ActualNorthing"];
                this.columnActualElevation = base.Columns["ActualElevation"];
                this.columnInterceptDepth = base.Columns["InterceptDepth"];
                this.columnBearing = base.Columns["Bearing"];
                this.columnInclination = base.Columns["Inclination"];
                this.columnMaterialType = base.Columns["MaterialType"];
                this.columnFe = base.Columns["Fe"];
                this.columnSiO2 = base.Columns["SiO2"];
                this.columnAl2O3 = base.Columns["Al2O3"];
                this.columnP = base.Columns["P"];
                this.columnS = base.Columns["S"];
                this.columnMn = base.Columns["Mn"];
                this.columnLOI = base.Columns["LOI"];
                this.columnGangue = base.Columns["Gangue"];
                this.columnLogMatType = base.Columns["LogMatType"];
                this.columnLogOtherMatType = base.Columns["LogOtherMatType"];
                this.columnLogTopMatType = base.Columns["LogTopMatType"];
                this.columnLogBottomMatType = base.Columns["LogBottomMatType"];
                this.columnLogTopColour = base.Columns["LogTopColour"];
                this.columnLogBottomColour = base.Columns["LogBottomColour"];
                this.columnLogReference = base.Columns["LogReference"];
                this.columnLogComments = base.Columns["LogComments"];
                this.columnLoggedUser = base.Columns["LoggedUser"];
                this.columnLoggedOn = base.Columns["LoggedOn"];
                this.columnLogValidatedOn = base.Columns["LogValidatedOn"];
                this.columnSampleId = base.Columns["SampleId"];
                this.columnSubmission = base.Columns["Submission"];
                this.columnInstructions = base.Columns["Instructions"];
                this.columnDesignedOn = base.Columns["DesignedOn"];
                this.columnDesignedUser = base.Columns["DesignedUser"];
                this.columnSelectedOn = base.Columns["SelectedOn"];
                this.columnSelectedUser = base.Columns["SelectedUser"];
                this.columnSampledOn = base.Columns["SampledOn"];
                this.columnSampledUser = base.Columns["SampledUser"];
                this.columnSubmittedOn = base.Columns["SubmittedOn"];
                this.columnSubmittedUser = base.Columns["SubmittedUser"];
                this.columnDespatchedOn = base.Columns["DespatchedOn"];
                this.columnDespatchedUser = base.Columns["DespatchedUser"];
                this.columnArrivedForPreparation = base.Columns["ArrivedForPreparation"];
                this.columnArrivedForPreparationUser = base.Columns["ArrivedForPreparationUser"];
                this.columnDespatchedFromPreparationOn = base.Columns["DespatchedFromPreparationOn"];
                this.columnDespatchedFromPreparationUser = base.Columns["DespatchedFromPreparationUser"];
                this.columnArrivedForAnalysis = base.Columns["ArrivedForAnalysis"];
                this.columnArrivedForAnalysisUser = base.Columns["ArrivedForAnalysisUser"];
                this.columnLabJobNo = base.Columns["LabJobNo"];
                this.columnReceivedOn = base.Columns["ReceivedOn"];
                this.columnReceivedUser = base.Columns["ReceivedUser"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPit = new global::System.Data.DataColumn("Pit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPit);
                this.columnBench = new global::System.Data.DataColumn("Bench", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBench);
                this.columnShotNo = new global::System.Data.DataColumn("ShotNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShotNo);
                this.columnHoleNo = new global::System.Data.DataColumn("HoleNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoleNo);
                this.columnPlanEasting = new global::System.Data.DataColumn("PlanEasting", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanEasting);
                this.columnPlanNorthing = new global::System.Data.DataColumn("PlanNorthing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanNorthing);
                this.columnPlanElevation = new global::System.Data.DataColumn("PlanElevation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanElevation);
                this.columnActualEasting = new global::System.Data.DataColumn("ActualEasting", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualEasting);
                this.columnActualNorthing = new global::System.Data.DataColumn("ActualNorthing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualNorthing);
                this.columnActualElevation = new global::System.Data.DataColumn("ActualElevation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualElevation);
                this.columnInterceptDepth = new global::System.Data.DataColumn("InterceptDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterceptDepth);
                this.columnBearing = new global::System.Data.DataColumn("Bearing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBearing);
                this.columnInclination = new global::System.Data.DataColumn("Inclination", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInclination);
                this.columnMaterialType = new global::System.Data.DataColumn("MaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialType);
                this.columnFe = new global::System.Data.DataColumn("Fe", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFe);
                this.columnSiO2 = new global::System.Data.DataColumn("SiO2", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiO2);
                this.columnAl2O3 = new global::System.Data.DataColumn("Al2O3", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAl2O3);
                this.columnP = new global::System.Data.DataColumn("P", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP);
                this.columnS = new global::System.Data.DataColumn("S", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS);
                this.columnMn = new global::System.Data.DataColumn("Mn", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMn);
                this.columnLOI = new global::System.Data.DataColumn("LOI", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOI);
                this.columnGangue = new global::System.Data.DataColumn("Gangue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGangue);
                this.columnLogMatType = new global::System.Data.DataColumn("LogMatType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogMatType);
                this.columnLogOtherMatType = new global::System.Data.DataColumn("LogOtherMatType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogOtherMatType);
                this.columnLogTopMatType = new global::System.Data.DataColumn("LogTopMatType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogTopMatType);
                this.columnLogBottomMatType = new global::System.Data.DataColumn("LogBottomMatType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogBottomMatType);
                this.columnLogTopColour = new global::System.Data.DataColumn("LogTopColour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogTopColour);
                this.columnLogBottomColour = new global::System.Data.DataColumn("LogBottomColour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogBottomColour);
                this.columnLogReference = new global::System.Data.DataColumn("LogReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogReference);
                this.columnLogComments = new global::System.Data.DataColumn("LogComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogComments);
                this.columnLoggedUser = new global::System.Data.DataColumn("LoggedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoggedUser);
                this.columnLoggedOn = new global::System.Data.DataColumn("LoggedOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoggedOn);
                this.columnLogValidatedOn = new global::System.Data.DataColumn("LogValidatedOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogValidatedOn);
                this.columnSampleId = new global::System.Data.DataColumn("SampleId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleId);
                this.columnSubmission = new global::System.Data.DataColumn("Submission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmission);
                this.columnInstructions = new global::System.Data.DataColumn("Instructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstructions);
                this.columnDesignedOn = new global::System.Data.DataColumn("DesignedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignedOn);
                this.columnDesignedUser = new global::System.Data.DataColumn("DesignedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignedUser);
                this.columnSelectedOn = new global::System.Data.DataColumn("SelectedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedOn);
                this.columnSelectedUser = new global::System.Data.DataColumn("SelectedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedUser);
                this.columnSampledOn = new global::System.Data.DataColumn("SampledOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampledOn);
                this.columnSampledUser = new global::System.Data.DataColumn("SampledUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampledUser);
                this.columnSubmittedOn = new global::System.Data.DataColumn("SubmittedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmittedOn);
                this.columnSubmittedUser = new global::System.Data.DataColumn("SubmittedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmittedUser);
                this.columnDespatchedOn = new global::System.Data.DataColumn("DespatchedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedOn);
                this.columnDespatchedUser = new global::System.Data.DataColumn("DespatchedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedUser);
                this.columnArrivedForPreparation = new global::System.Data.DataColumn("ArrivedForPreparation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForPreparation);
                this.columnArrivedForPreparationUser = new global::System.Data.DataColumn("ArrivedForPreparationUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForPreparationUser);
                this.columnDespatchedFromPreparationOn = new global::System.Data.DataColumn("DespatchedFromPreparationOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedFromPreparationOn);
                this.columnDespatchedFromPreparationUser = new global::System.Data.DataColumn("DespatchedFromPreparationUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedFromPreparationUser);
                this.columnArrivedForAnalysis = new global::System.Data.DataColumn("ArrivedForAnalysis", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForAnalysis);
                this.columnArrivedForAnalysisUser = new global::System.Data.DataColumn("ArrivedForAnalysisUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForAnalysisUser);
                this.columnLabJobNo = new global::System.Data.DataColumn("LabJobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabJobNo);
                this.columnReceivedOn = new global::System.Data.DataColumn("ReceivedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedOn);
                this.columnReceivedUser = new global::System.Data.DataColumn("ReceivedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedUser);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPit,
                                this.columnBench,
                                this.columnShotNo,
                                this.columnHoleNo}, true));
                this.columnPit.AllowDBNull = false;
                this.columnPit.MaxLength = 20;
                this.columnBench.AllowDBNull = false;
                this.columnBench.MaxLength = 20;
                this.columnShotNo.AllowDBNull = false;
                this.columnShotNo.MaxLength = 20;
                this.columnHoleNo.AllowDBNull = false;
                this.columnHoleNo.MaxLength = 20;
                this.columnPlanEasting.AllowDBNull = false;
                this.columnPlanNorthing.AllowDBNull = false;
                this.columnPlanElevation.AllowDBNull = false;
                this.columnMaterialType.MaxLength = 20;
                this.columnLogMatType.MaxLength = 55;
                this.columnLogOtherMatType.MaxLength = 55;
                this.columnLogTopMatType.MaxLength = 55;
                this.columnLogBottomMatType.MaxLength = 55;
                this.columnLogTopColour.MaxLength = 55;
                this.columnLogBottomColour.MaxLength = 55;
                this.columnLogReference.MaxLength = 55;
                this.columnLogComments.MaxLength = 255;
                this.columnLoggedUser.MaxLength = 55;
                this.columnLoggedOn.MaxLength = 55;
                this.columnLogValidatedOn.MaxLength = 55;
                this.columnSampleId.MaxLength = 80;
                this.columnSubmission.MaxLength = 80;
                this.columnInstructions.MaxLength = 80;
                this.columnDesignedUser.MaxLength = 55;
                this.columnSelectedUser.MaxLength = 55;
                this.columnSampledUser.MaxLength = 55;
                this.columnSubmittedUser.MaxLength = 55;
                this.columnDespatchedUser.MaxLength = 55;
                this.columnArrivedForPreparationUser.MaxLength = 55;
                this.columnDespatchedFromPreparationUser.MaxLength = 55;
                this.columnArrivedForAnalysisUser.MaxLength = 55;
                this.columnLabJobNo.MaxLength = 80;
                this.columnReceivedUser.MaxLength = 55;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gcv_Hole_CollarsRow Newgcv_Hole_CollarsRow() {
                return ((gcv_Hole_CollarsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new gcv_Hole_CollarsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(gcv_Hole_CollarsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.gcv_Hole_CollarsRowChanged != null)) {
                    this.gcv_Hole_CollarsRowChanged(this, new gcv_Hole_CollarsRowChangeEvent(((gcv_Hole_CollarsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.gcv_Hole_CollarsRowChanging != null)) {
                    this.gcv_Hole_CollarsRowChanging(this, new gcv_Hole_CollarsRowChangeEvent(((gcv_Hole_CollarsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.gcv_Hole_CollarsRowDeleted != null)) {
                    this.gcv_Hole_CollarsRowDeleted(this, new gcv_Hole_CollarsRowChangeEvent(((gcv_Hole_CollarsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.gcv_Hole_CollarsRowDeleting != null)) {
                    this.gcv_Hole_CollarsRowDeleting(this, new gcv_Hole_CollarsRowChangeEvent(((gcv_Hole_CollarsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removegcv_Hole_CollarsRow(gcv_Hole_CollarsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Samples ds = new Samples();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "gcv_Hole_CollarsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class psm_Product_SamplesDataTable : global::System.Data.TypedTableBase<psm_Product_SamplesRow> {
            
            private global::System.Data.DataColumn columnCrusher;
            
            private global::System.Data.DataColumn columnSampledOn;
            
            private global::System.Data.DataColumn columnSampledUser;
            
            private global::System.Data.DataColumn columnShift;
            
            private global::System.Data.DataColumn columnSampleId;
            
            private global::System.Data.DataColumn columnWeightometer;
            
            private global::System.Data.DataColumn columnSampleBucket;
            
            private global::System.Data.DataColumn columnStackerPosition;
            
            private global::System.Data.DataColumn columnPrimaryFrom;
            
            private global::System.Data.DataColumn columnPrimaryScoops;
            
            private global::System.Data.DataColumn columnSecondaryFrom;
            
            private global::System.Data.DataColumn columnSecondaryScoops;
            
            private global::System.Data.DataColumn columnTo;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnSubmission;
            
            private global::System.Data.DataColumn columnInstructions;
            
            private global::System.Data.DataColumn columnFe;
            
            private global::System.Data.DataColumn columnSiO2;
            
            private global::System.Data.DataColumn columnAl2O3;
            
            private global::System.Data.DataColumn columnP;
            
            private global::System.Data.DataColumn columnS;
            
            private global::System.Data.DataColumn columnMn;
            
            private global::System.Data.DataColumn columnLOI;
            
            private global::System.Data.DataColumn columnTotalMass;
            
            private global::System.Data.DataColumn columnSize12_5mm;
            
            private global::System.Data.DataColumn columnSize10_0_12_5mm;
            
            private global::System.Data.DataColumn columnSize9_5_10_0mm;
            
            private global::System.Data.DataColumn columnSize6_7_9_5mm;
            
            private global::System.Data.DataColumn columnSize0_5_6_7mm;
            
            private global::System.Data.DataColumn columnSize0_0_0_5mm;
            
            private global::System.Data.DataColumn columnMoisture;
            
            private global::System.Data.DataColumn columnSubmittedOn;
            
            private global::System.Data.DataColumn columnSubmittedUser;
            
            private global::System.Data.DataColumn columnDespatchedOn;
            
            private global::System.Data.DataColumn columnDespatchedUser;
            
            private global::System.Data.DataColumn columnArrivedForPreparation;
            
            private global::System.Data.DataColumn columnArrivedForPreparationUser;
            
            private global::System.Data.DataColumn columnDespatchedFromPreparationOn;
            
            private global::System.Data.DataColumn columnDespatchedFromPreparationUser;
            
            private global::System.Data.DataColumn columnArrivedForAnalysis;
            
            private global::System.Data.DataColumn columnArrivedForAnalysisUser;
            
            private global::System.Data.DataColumn columnLabJobNo;
            
            private global::System.Data.DataColumn columnReceivedOn;
            
            private global::System.Data.DataColumn columnReceivedUser;
            
            private global::System.Data.DataColumn columnPublished;
            
            private global::System.Data.DataColumn columnAction;
            
            private global::System.Data.DataColumn columnFinger3From;
            
            private global::System.Data.DataColumn columnFinger3Scoops;
            
            private global::System.Data.DataColumn columnFinger4From;
            
            private global::System.Data.DataColumn columnFinger4Scoops;
            
            private global::System.Data.DataColumn columnFinger5From;
            
            private global::System.Data.DataColumn columnFinger5Scoops;
            
            private global::System.Data.DataColumn columnFinger6From;
            
            private global::System.Data.DataColumn columnFinger6Scoops;
            
            private global::System.Data.DataColumn columnSize40mm;
            
            private global::System.Data.DataColumn columnSize6_3_40mm;
            
            private global::System.Data.DataColumn columnSize0_0_6_3mm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public psm_Product_SamplesDataTable() {
                this.TableName = "psm_Product_Samples";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal psm_Product_SamplesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected psm_Product_SamplesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CrusherColumn {
                get {
                    return this.columnCrusher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampledOnColumn {
                get {
                    return this.columnSampledOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampledUserColumn {
                get {
                    return this.columnSampledUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShiftColumn {
                get {
                    return this.columnShift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleIdColumn {
                get {
                    return this.columnSampleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightometerColumn {
                get {
                    return this.columnWeightometer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleBucketColumn {
                get {
                    return this.columnSampleBucket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StackerPositionColumn {
                get {
                    return this.columnStackerPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrimaryFromColumn {
                get {
                    return this.columnPrimaryFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrimaryScoopsColumn {
                get {
                    return this.columnPrimaryScoops;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecondaryFromColumn {
                get {
                    return this.columnSecondaryFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecondaryScoopsColumn {
                get {
                    return this.columnSecondaryScoops;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToColumn {
                get {
                    return this.columnTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubmissionColumn {
                get {
                    return this.columnSubmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstructionsColumn {
                get {
                    return this.columnInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FeColumn {
                get {
                    return this.columnFe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SiO2Column {
                get {
                    return this.columnSiO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Al2O3Column {
                get {
                    return this.columnAl2O3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PColumn {
                get {
                    return this.columnP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SColumn {
                get {
                    return this.columnS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MnColumn {
                get {
                    return this.columnMn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOIColumn {
                get {
                    return this.columnLOI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMassColumn {
                get {
                    return this.columnTotalMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size12_5mmColumn {
                get {
                    return this.columnSize12_5mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size10_0_12_5mmColumn {
                get {
                    return this.columnSize10_0_12_5mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size9_5_10_0mmColumn {
                get {
                    return this.columnSize9_5_10_0mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size6_7_9_5mmColumn {
                get {
                    return this.columnSize6_7_9_5mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size0_5_6_7mmColumn {
                get {
                    return this.columnSize0_5_6_7mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size0_0_0_5mmColumn {
                get {
                    return this.columnSize0_0_0_5mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoistureColumn {
                get {
                    return this.columnMoisture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubmittedOnColumn {
                get {
                    return this.columnSubmittedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubmittedUserColumn {
                get {
                    return this.columnSubmittedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedOnColumn {
                get {
                    return this.columnDespatchedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedUserColumn {
                get {
                    return this.columnDespatchedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForPreparationColumn {
                get {
                    return this.columnArrivedForPreparation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForPreparationUserColumn {
                get {
                    return this.columnArrivedForPreparationUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedFromPreparationOnColumn {
                get {
                    return this.columnDespatchedFromPreparationOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchedFromPreparationUserColumn {
                get {
                    return this.columnDespatchedFromPreparationUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForAnalysisColumn {
                get {
                    return this.columnArrivedForAnalysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivedForAnalysisUserColumn {
                get {
                    return this.columnArrivedForAnalysisUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabJobNoColumn {
                get {
                    return this.columnLabJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivedOnColumn {
                get {
                    return this.columnReceivedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivedUserColumn {
                get {
                    return this.columnReceivedUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublishedColumn {
                get {
                    return this.columnPublished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActionColumn {
                get {
                    return this.columnAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger3FromColumn {
                get {
                    return this.columnFinger3From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger3ScoopsColumn {
                get {
                    return this.columnFinger3Scoops;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger4FromColumn {
                get {
                    return this.columnFinger4From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger4ScoopsColumn {
                get {
                    return this.columnFinger4Scoops;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger5FromColumn {
                get {
                    return this.columnFinger5From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger5ScoopsColumn {
                get {
                    return this.columnFinger5Scoops;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger6FromColumn {
                get {
                    return this.columnFinger6From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Finger6ScoopsColumn {
                get {
                    return this.columnFinger6Scoops;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size40mmColumn {
                get {
                    return this.columnSize40mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size6_3_40mmColumn {
                get {
                    return this.columnSize6_3_40mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Size0_0_6_3mmColumn {
                get {
                    return this.columnSize0_0_6_3mm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public psm_Product_SamplesRow this[int index] {
                get {
                    return ((psm_Product_SamplesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event psm_Product_SamplesRowChangeEventHandler psm_Product_SamplesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event psm_Product_SamplesRowChangeEventHandler psm_Product_SamplesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event psm_Product_SamplesRowChangeEventHandler psm_Product_SamplesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event psm_Product_SamplesRowChangeEventHandler psm_Product_SamplesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addpsm_Product_SamplesRow(psm_Product_SamplesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public psm_Product_SamplesRow Addpsm_Product_SamplesRow(
                        string Crusher, 
                        System.DateTime SampledOn, 
                        string SampledUser, 
                        string Shift, 
                        string SampleId, 
                        double Weightometer, 
                        int SampleBucket, 
                        int StackerPosition, 
                        string PrimaryFrom, 
                        int PrimaryScoops, 
                        string SecondaryFrom, 
                        int SecondaryScoops, 
                        string To, 
                        string Comments, 
                        string Submission, 
                        string Instructions, 
                        float Fe, 
                        float SiO2, 
                        float Al2O3, 
                        float P, 
                        float S, 
                        float Mn, 
                        float LOI, 
                        float TotalMass, 
                        float Size12_5mm, 
                        float Size10_0_12_5mm, 
                        float Size9_5_10_0mm, 
                        float Size6_7_9_5mm, 
                        float Size0_5_6_7mm, 
                        float Size0_0_0_5mm, 
                        float Moisture, 
                        System.DateTime SubmittedOn, 
                        string SubmittedUser, 
                        System.DateTime DespatchedOn, 
                        string DespatchedUser, 
                        System.DateTime ArrivedForPreparation, 
                        string ArrivedForPreparationUser, 
                        System.DateTime DespatchedFromPreparationOn, 
                        string DespatchedFromPreparationUser, 
                        System.DateTime ArrivedForAnalysis, 
                        string ArrivedForAnalysisUser, 
                        string LabJobNo, 
                        System.DateTime ReceivedOn, 
                        string ReceivedUser, 
                        string Published, 
                        string Action, 
                        string Finger3From, 
                        int Finger3Scoops, 
                        string Finger4From, 
                        int Finger4Scoops, 
                        string Finger5From, 
                        int Finger5Scoops, 
                        string Finger6From, 
                        int Finger6Scoops, 
                        float Size40mm, 
                        float Size6_3_40mm, 
                        float Size0_0_6_3mm) {
                psm_Product_SamplesRow rowpsm_Product_SamplesRow = ((psm_Product_SamplesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Crusher,
                        SampledOn,
                        SampledUser,
                        Shift,
                        SampleId,
                        Weightometer,
                        SampleBucket,
                        StackerPosition,
                        PrimaryFrom,
                        PrimaryScoops,
                        SecondaryFrom,
                        SecondaryScoops,
                        To,
                        Comments,
                        Submission,
                        Instructions,
                        Fe,
                        SiO2,
                        Al2O3,
                        P,
                        S,
                        Mn,
                        LOI,
                        TotalMass,
                        Size12_5mm,
                        Size10_0_12_5mm,
                        Size9_5_10_0mm,
                        Size6_7_9_5mm,
                        Size0_5_6_7mm,
                        Size0_0_0_5mm,
                        Moisture,
                        SubmittedOn,
                        SubmittedUser,
                        DespatchedOn,
                        DespatchedUser,
                        ArrivedForPreparation,
                        ArrivedForPreparationUser,
                        DespatchedFromPreparationOn,
                        DespatchedFromPreparationUser,
                        ArrivedForAnalysis,
                        ArrivedForAnalysisUser,
                        LabJobNo,
                        ReceivedOn,
                        ReceivedUser,
                        Published,
                        Action,
                        Finger3From,
                        Finger3Scoops,
                        Finger4From,
                        Finger4Scoops,
                        Finger5From,
                        Finger5Scoops,
                        Finger6From,
                        Finger6Scoops,
                        Size40mm,
                        Size6_3_40mm,
                        Size0_0_6_3mm};
                rowpsm_Product_SamplesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpsm_Product_SamplesRow);
                return rowpsm_Product_SamplesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public psm_Product_SamplesRow FindBySampleId(string SampleId) {
                return ((psm_Product_SamplesRow)(this.Rows.Find(new object[] {
                            SampleId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                psm_Product_SamplesDataTable cln = ((psm_Product_SamplesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new psm_Product_SamplesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCrusher = base.Columns["Crusher"];
                this.columnSampledOn = base.Columns["SampledOn"];
                this.columnSampledUser = base.Columns["SampledUser"];
                this.columnShift = base.Columns["Shift"];
                this.columnSampleId = base.Columns["SampleId"];
                this.columnWeightometer = base.Columns["Weightometer"];
                this.columnSampleBucket = base.Columns["SampleBucket"];
                this.columnStackerPosition = base.Columns["StackerPosition"];
                this.columnPrimaryFrom = base.Columns["PrimaryFrom"];
                this.columnPrimaryScoops = base.Columns["PrimaryScoops"];
                this.columnSecondaryFrom = base.Columns["SecondaryFrom"];
                this.columnSecondaryScoops = base.Columns["SecondaryScoops"];
                this.columnTo = base.Columns["To"];
                this.columnComments = base.Columns["Comments"];
                this.columnSubmission = base.Columns["Submission"];
                this.columnInstructions = base.Columns["Instructions"];
                this.columnFe = base.Columns["Fe"];
                this.columnSiO2 = base.Columns["SiO2"];
                this.columnAl2O3 = base.Columns["Al2O3"];
                this.columnP = base.Columns["P"];
                this.columnS = base.Columns["S"];
                this.columnMn = base.Columns["Mn"];
                this.columnLOI = base.Columns["LOI"];
                this.columnTotalMass = base.Columns["TotalMass"];
                this.columnSize12_5mm = base.Columns["Size12_5mm"];
                this.columnSize10_0_12_5mm = base.Columns["Size10_0_12_5mm"];
                this.columnSize9_5_10_0mm = base.Columns["Size9_5_10_0mm"];
                this.columnSize6_7_9_5mm = base.Columns["Size6_7_9_5mm"];
                this.columnSize0_5_6_7mm = base.Columns["Size0_5_6_7mm"];
                this.columnSize0_0_0_5mm = base.Columns["Size0_0_0_5mm"];
                this.columnMoisture = base.Columns["Moisture"];
                this.columnSubmittedOn = base.Columns["SubmittedOn"];
                this.columnSubmittedUser = base.Columns["SubmittedUser"];
                this.columnDespatchedOn = base.Columns["DespatchedOn"];
                this.columnDespatchedUser = base.Columns["DespatchedUser"];
                this.columnArrivedForPreparation = base.Columns["ArrivedForPreparation"];
                this.columnArrivedForPreparationUser = base.Columns["ArrivedForPreparationUser"];
                this.columnDespatchedFromPreparationOn = base.Columns["DespatchedFromPreparationOn"];
                this.columnDespatchedFromPreparationUser = base.Columns["DespatchedFromPreparationUser"];
                this.columnArrivedForAnalysis = base.Columns["ArrivedForAnalysis"];
                this.columnArrivedForAnalysisUser = base.Columns["ArrivedForAnalysisUser"];
                this.columnLabJobNo = base.Columns["LabJobNo"];
                this.columnReceivedOn = base.Columns["ReceivedOn"];
                this.columnReceivedUser = base.Columns["ReceivedUser"];
                this.columnPublished = base.Columns["Published"];
                this.columnAction = base.Columns["Action"];
                this.columnFinger3From = base.Columns["Finger3From"];
                this.columnFinger3Scoops = base.Columns["Finger3Scoops"];
                this.columnFinger4From = base.Columns["Finger4From"];
                this.columnFinger4Scoops = base.Columns["Finger4Scoops"];
                this.columnFinger5From = base.Columns["Finger5From"];
                this.columnFinger5Scoops = base.Columns["Finger5Scoops"];
                this.columnFinger6From = base.Columns["Finger6From"];
                this.columnFinger6Scoops = base.Columns["Finger6Scoops"];
                this.columnSize40mm = base.Columns["Size40mm"];
                this.columnSize6_3_40mm = base.Columns["Size6_3_40mm"];
                this.columnSize0_0_6_3mm = base.Columns["Size0_0_6_3mm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCrusher = new global::System.Data.DataColumn("Crusher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrusher);
                this.columnSampledOn = new global::System.Data.DataColumn("SampledOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampledOn);
                this.columnSampledUser = new global::System.Data.DataColumn("SampledUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampledUser);
                this.columnShift = new global::System.Data.DataColumn("Shift", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShift);
                this.columnSampleId = new global::System.Data.DataColumn("SampleId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleId);
                this.columnWeightometer = new global::System.Data.DataColumn("Weightometer", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightometer);
                this.columnSampleBucket = new global::System.Data.DataColumn("SampleBucket", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleBucket);
                this.columnStackerPosition = new global::System.Data.DataColumn("StackerPosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStackerPosition);
                this.columnPrimaryFrom = new global::System.Data.DataColumn("PrimaryFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryFrom);
                this.columnPrimaryScoops = new global::System.Data.DataColumn("PrimaryScoops", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryScoops);
                this.columnSecondaryFrom = new global::System.Data.DataColumn("SecondaryFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondaryFrom);
                this.columnSecondaryScoops = new global::System.Data.DataColumn("SecondaryScoops", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondaryScoops);
                this.columnTo = new global::System.Data.DataColumn("To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnSubmission = new global::System.Data.DataColumn("Submission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmission);
                this.columnInstructions = new global::System.Data.DataColumn("Instructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstructions);
                this.columnFe = new global::System.Data.DataColumn("Fe", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFe);
                this.columnSiO2 = new global::System.Data.DataColumn("SiO2", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiO2);
                this.columnAl2O3 = new global::System.Data.DataColumn("Al2O3", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAl2O3);
                this.columnP = new global::System.Data.DataColumn("P", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP);
                this.columnS = new global::System.Data.DataColumn("S", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS);
                this.columnMn = new global::System.Data.DataColumn("Mn", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMn);
                this.columnLOI = new global::System.Data.DataColumn("LOI", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOI);
                this.columnTotalMass = new global::System.Data.DataColumn("TotalMass", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMass);
                this.columnSize12_5mm = new global::System.Data.DataColumn("Size12_5mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize12_5mm);
                this.columnSize10_0_12_5mm = new global::System.Data.DataColumn("Size10_0_12_5mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize10_0_12_5mm);
                this.columnSize9_5_10_0mm = new global::System.Data.DataColumn("Size9_5_10_0mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize9_5_10_0mm);
                this.columnSize6_7_9_5mm = new global::System.Data.DataColumn("Size6_7_9_5mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize6_7_9_5mm);
                this.columnSize0_5_6_7mm = new global::System.Data.DataColumn("Size0_5_6_7mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize0_5_6_7mm);
                this.columnSize0_0_0_5mm = new global::System.Data.DataColumn("Size0_0_0_5mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize0_0_0_5mm);
                this.columnMoisture = new global::System.Data.DataColumn("Moisture", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoisture);
                this.columnSubmittedOn = new global::System.Data.DataColumn("SubmittedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmittedOn);
                this.columnSubmittedUser = new global::System.Data.DataColumn("SubmittedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmittedUser);
                this.columnDespatchedOn = new global::System.Data.DataColumn("DespatchedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedOn);
                this.columnDespatchedUser = new global::System.Data.DataColumn("DespatchedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedUser);
                this.columnArrivedForPreparation = new global::System.Data.DataColumn("ArrivedForPreparation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForPreparation);
                this.columnArrivedForPreparationUser = new global::System.Data.DataColumn("ArrivedForPreparationUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForPreparationUser);
                this.columnDespatchedFromPreparationOn = new global::System.Data.DataColumn("DespatchedFromPreparationOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedFromPreparationOn);
                this.columnDespatchedFromPreparationUser = new global::System.Data.DataColumn("DespatchedFromPreparationUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchedFromPreparationUser);
                this.columnArrivedForAnalysis = new global::System.Data.DataColumn("ArrivedForAnalysis", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForAnalysis);
                this.columnArrivedForAnalysisUser = new global::System.Data.DataColumn("ArrivedForAnalysisUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedForAnalysisUser);
                this.columnLabJobNo = new global::System.Data.DataColumn("LabJobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabJobNo);
                this.columnReceivedOn = new global::System.Data.DataColumn("ReceivedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedOn);
                this.columnReceivedUser = new global::System.Data.DataColumn("ReceivedUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedUser);
                this.columnPublished = new global::System.Data.DataColumn("Published", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublished);
                this.columnAction = new global::System.Data.DataColumn("Action", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAction);
                this.columnFinger3From = new global::System.Data.DataColumn("Finger3From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger3From);
                this.columnFinger3Scoops = new global::System.Data.DataColumn("Finger3Scoops", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger3Scoops);
                this.columnFinger4From = new global::System.Data.DataColumn("Finger4From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger4From);
                this.columnFinger4Scoops = new global::System.Data.DataColumn("Finger4Scoops", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger4Scoops);
                this.columnFinger5From = new global::System.Data.DataColumn("Finger5From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger5From);
                this.columnFinger5Scoops = new global::System.Data.DataColumn("Finger5Scoops", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger5Scoops);
                this.columnFinger6From = new global::System.Data.DataColumn("Finger6From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger6From);
                this.columnFinger6Scoops = new global::System.Data.DataColumn("Finger6Scoops", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinger6Scoops);
                this.columnSize40mm = new global::System.Data.DataColumn("Size40mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize40mm);
                this.columnSize6_3_40mm = new global::System.Data.DataColumn("Size6_3_40mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize6_3_40mm);
                this.columnSize0_0_6_3mm = new global::System.Data.DataColumn("Size0_0_6_3mm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize0_0_6_3mm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSampleId}, true));
                this.columnCrusher.MaxLength = 80;
                this.columnSampledUser.MaxLength = 55;
                this.columnShift.MaxLength = 20;
                this.columnSampleId.AllowDBNull = false;
                this.columnSampleId.Unique = true;
                this.columnSampleId.MaxLength = 80;
                this.columnPrimaryFrom.MaxLength = 80;
                this.columnSecondaryFrom.MaxLength = 80;
                this.columnTo.MaxLength = 80;
                this.columnComments.MaxLength = 240;
                this.columnSubmission.MaxLength = 80;
                this.columnInstructions.MaxLength = 80;
                this.columnSubmittedUser.MaxLength = 55;
                this.columnDespatchedUser.MaxLength = 55;
                this.columnArrivedForPreparationUser.MaxLength = 55;
                this.columnDespatchedFromPreparationUser.MaxLength = 55;
                this.columnArrivedForAnalysisUser.MaxLength = 55;
                this.columnLabJobNo.MaxLength = 80;
                this.columnReceivedUser.MaxLength = 55;
                this.columnPublished.MaxLength = 10;
                this.columnAction.MaxLength = 10;
                this.columnFinger3From.MaxLength = 80;
                this.columnFinger4From.MaxLength = 80;
                this.columnFinger5From.MaxLength = 80;
                this.columnFinger6From.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public psm_Product_SamplesRow Newpsm_Product_SamplesRow() {
                return ((psm_Product_SamplesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new psm_Product_SamplesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(psm_Product_SamplesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.psm_Product_SamplesRowChanged != null)) {
                    this.psm_Product_SamplesRowChanged(this, new psm_Product_SamplesRowChangeEvent(((psm_Product_SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.psm_Product_SamplesRowChanging != null)) {
                    this.psm_Product_SamplesRowChanging(this, new psm_Product_SamplesRowChangeEvent(((psm_Product_SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.psm_Product_SamplesRowDeleted != null)) {
                    this.psm_Product_SamplesRowDeleted(this, new psm_Product_SamplesRowChangeEvent(((psm_Product_SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.psm_Product_SamplesRowDeleting != null)) {
                    this.psm_Product_SamplesRowDeleting(this, new psm_Product_SamplesRowChangeEvent(((psm_Product_SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removepsm_Product_SamplesRow(psm_Product_SamplesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Samples ds = new Samples();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "psm_Product_SamplesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class gcv_Hole_CollarsRow : global::System.Data.DataRow {
            
            private gcv_Hole_CollarsDataTable tablegcv_Hole_Collars;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal gcv_Hole_CollarsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegcv_Hole_Collars = ((gcv_Hole_CollarsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Pit {
                get {
                    return ((string)(this[this.tablegcv_Hole_Collars.PitColumn]));
                }
                set {
                    this[this.tablegcv_Hole_Collars.PitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bench {
                get {
                    return ((string)(this[this.tablegcv_Hole_Collars.BenchColumn]));
                }
                set {
                    this[this.tablegcv_Hole_Collars.BenchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShotNo {
                get {
                    return ((string)(this[this.tablegcv_Hole_Collars.ShotNoColumn]));
                }
                set {
                    this[this.tablegcv_Hole_Collars.ShotNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoleNo {
                get {
                    return ((string)(this[this.tablegcv_Hole_Collars.HoleNoColumn]));
                }
                set {
                    this[this.tablegcv_Hole_Collars.HoleNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PlanEasting {
                get {
                    return ((double)(this[this.tablegcv_Hole_Collars.PlanEastingColumn]));
                }
                set {
                    this[this.tablegcv_Hole_Collars.PlanEastingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PlanNorthing {
                get {
                    return ((double)(this[this.tablegcv_Hole_Collars.PlanNorthingColumn]));
                }
                set {
                    this[this.tablegcv_Hole_Collars.PlanNorthingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PlanElevation {
                get {
                    return ((double)(this[this.tablegcv_Hole_Collars.PlanElevationColumn]));
                }
                set {
                    this[this.tablegcv_Hole_Collars.PlanElevationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ActualEasting {
                get {
                    try {
                        return ((double)(this[this.tablegcv_Hole_Collars.ActualEastingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualEasting\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ActualEastingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ActualNorthing {
                get {
                    try {
                        return ((double)(this[this.tablegcv_Hole_Collars.ActualNorthingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualNorthing\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ActualNorthingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ActualElevation {
                get {
                    try {
                        return ((double)(this[this.tablegcv_Hole_Collars.ActualElevationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualElevation\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ActualElevationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InterceptDepth {
                get {
                    try {
                        return ((double)(this[this.tablegcv_Hole_Collars.InterceptDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterceptDepth\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.InterceptDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Bearing {
                get {
                    try {
                        return ((double)(this[this.tablegcv_Hole_Collars.BearingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bearing\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.BearingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inclination {
                get {
                    try {
                        return ((double)(this[this.tablegcv_Hole_Collars.InclinationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inclination\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.InclinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialType {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.MaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialType\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.MaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Fe {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.FeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fe\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.FeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float SiO2 {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.SiO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiO2\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SiO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Al2O3 {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.Al2O3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Al2O3\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.Al2O3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float P {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Mn {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.MnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.MnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float LOI {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.LOIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOI\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LOIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Gangue {
                get {
                    try {
                        return ((float)(this[this.tablegcv_Hole_Collars.GangueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gangue\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.GangueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogMatType {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogMatTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogMatType\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogMatTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogOtherMatType {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogOtherMatTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogOtherMatType\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogOtherMatTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogTopMatType {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogTopMatTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogTopMatType\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogTopMatTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogBottomMatType {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogBottomMatTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogBottomMatType\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogBottomMatTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogTopColour {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogTopColourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogTopColour\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogTopColourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogBottomColour {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogBottomColourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogBottomColour\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogBottomColourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogReference {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogReference\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogComments {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogComments\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoggedUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LoggedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoggedUser\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LoggedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoggedOn {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LoggedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoggedOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LoggedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogValidatedOn {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LogValidatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogValidatedOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LogValidatedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampleId {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.SampleIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleId\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SampleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Submission {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.SubmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Submission\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SubmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instructions {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.InstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instructions\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.InstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DesignedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.DesignedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DesignedOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.DesignedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DesignedUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.DesignedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DesignedUser\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.DesignedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SelectedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.SelectedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelectedOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SelectedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SelectedUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.SelectedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelectedUser\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SelectedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SampledOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.SampledOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampledOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SampledOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampledUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.SampledUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampledUser\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SampledUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SubmittedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.SubmittedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubmittedOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SubmittedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubmittedUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.SubmittedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubmittedUser\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.SubmittedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DespatchedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.DespatchedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.DespatchedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DespatchedUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.DespatchedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedUser\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.DespatchedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ArrivedForPreparation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.ArrivedForPreparationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForPreparation\' in table \'gcv_Hole_Collars\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ArrivedForPreparationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArrivedForPreparationUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.ArrivedForPreparationUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForPreparationUser\' in table \'gcv_Hole_Collars\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ArrivedForPreparationUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DespatchedFromPreparationOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.DespatchedFromPreparationOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedFromPreparationOn\' in table \'gcv_Hole_Collars\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.DespatchedFromPreparationOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DespatchedFromPreparationUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.DespatchedFromPreparationUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedFromPreparationUser\' in table \'gcv_Hole_Collars\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.DespatchedFromPreparationUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ArrivedForAnalysis {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.ArrivedForAnalysisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForAnalysis\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ArrivedForAnalysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArrivedForAnalysisUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.ArrivedForAnalysisUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForAnalysisUser\' in table \'gcv_Hole_Collars\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ArrivedForAnalysisUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LabJobNo {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.LabJobNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabJobNo\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.LabJobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReceivedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegcv_Hole_Collars.ReceivedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedOn\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ReceivedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReceivedUser {
                get {
                    try {
                        return ((string)(this[this.tablegcv_Hole_Collars.ReceivedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedUser\' in table \'gcv_Hole_Collars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegcv_Hole_Collars.ReceivedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualEastingNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ActualEastingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualEastingNull() {
                this[this.tablegcv_Hole_Collars.ActualEastingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualNorthingNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ActualNorthingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualNorthingNull() {
                this[this.tablegcv_Hole_Collars.ActualNorthingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualElevationNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ActualElevationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualElevationNull() {
                this[this.tablegcv_Hole_Collars.ActualElevationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInterceptDepthNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.InterceptDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInterceptDepthNull() {
                this[this.tablegcv_Hole_Collars.InterceptDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBearingNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.BearingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBearingNull() {
                this[this.tablegcv_Hole_Collars.BearingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInclinationNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.InclinationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInclinationNull() {
                this[this.tablegcv_Hole_Collars.InclinationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialTypeNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.MaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialTypeNull() {
                this[this.tablegcv_Hole_Collars.MaterialTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFeNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.FeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFeNull() {
                this[this.tablegcv_Hole_Collars.FeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSiO2Null() {
                return this.IsNull(this.tablegcv_Hole_Collars.SiO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSiO2Null() {
                this[this.tablegcv_Hole_Collars.SiO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAl2O3Null() {
                return this.IsNull(this.tablegcv_Hole_Collars.Al2O3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAl2O3Null() {
                this[this.tablegcv_Hole_Collars.Al2O3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNull() {
                this[this.tablegcv_Hole_Collars.PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSNull() {
                this[this.tablegcv_Hole_Collars.SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.MnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMnNull() {
                this[this.tablegcv_Hole_Collars.MnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOINull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LOIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOINull() {
                this[this.tablegcv_Hole_Collars.LOIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGangueNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.GangueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGangueNull() {
                this[this.tablegcv_Hole_Collars.GangueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogMatTypeNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogMatTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogMatTypeNull() {
                this[this.tablegcv_Hole_Collars.LogMatTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogOtherMatTypeNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogOtherMatTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogOtherMatTypeNull() {
                this[this.tablegcv_Hole_Collars.LogOtherMatTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogTopMatTypeNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogTopMatTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogTopMatTypeNull() {
                this[this.tablegcv_Hole_Collars.LogTopMatTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogBottomMatTypeNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogBottomMatTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogBottomMatTypeNull() {
                this[this.tablegcv_Hole_Collars.LogBottomMatTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogTopColourNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogTopColourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogTopColourNull() {
                this[this.tablegcv_Hole_Collars.LogTopColourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogBottomColourNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogBottomColourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogBottomColourNull() {
                this[this.tablegcv_Hole_Collars.LogBottomColourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogReferenceNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogReferenceNull() {
                this[this.tablegcv_Hole_Collars.LogReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogCommentsNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogCommentsNull() {
                this[this.tablegcv_Hole_Collars.LogCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoggedUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LoggedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoggedUserNull() {
                this[this.tablegcv_Hole_Collars.LoggedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoggedOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LoggedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoggedOnNull() {
                this[this.tablegcv_Hole_Collars.LoggedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogValidatedOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LogValidatedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogValidatedOnNull() {
                this[this.tablegcv_Hole_Collars.LogValidatedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleIdNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SampleIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleIdNull() {
                this[this.tablegcv_Hole_Collars.SampleIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubmissionNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SubmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubmissionNull() {
                this[this.tablegcv_Hole_Collars.SubmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstructionsNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.InstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstructionsNull() {
                this[this.tablegcv_Hole_Collars.InstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDesignedOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.DesignedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDesignedOnNull() {
                this[this.tablegcv_Hole_Collars.DesignedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDesignedUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.DesignedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDesignedUserNull() {
                this[this.tablegcv_Hole_Collars.DesignedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelectedOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SelectedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSelectedOnNull() {
                this[this.tablegcv_Hole_Collars.SelectedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelectedUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SelectedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSelectedUserNull() {
                this[this.tablegcv_Hole_Collars.SelectedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampledOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SampledOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampledOnNull() {
                this[this.tablegcv_Hole_Collars.SampledOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampledUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SampledUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampledUserNull() {
                this[this.tablegcv_Hole_Collars.SampledUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubmittedOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SubmittedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubmittedOnNull() {
                this[this.tablegcv_Hole_Collars.SubmittedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubmittedUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.SubmittedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubmittedUserNull() {
                this[this.tablegcv_Hole_Collars.SubmittedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.DespatchedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedOnNull() {
                this[this.tablegcv_Hole_Collars.DespatchedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.DespatchedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedUserNull() {
                this[this.tablegcv_Hole_Collars.DespatchedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForPreparationNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ArrivedForPreparationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForPreparationNull() {
                this[this.tablegcv_Hole_Collars.ArrivedForPreparationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForPreparationUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ArrivedForPreparationUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForPreparationUserNull() {
                this[this.tablegcv_Hole_Collars.ArrivedForPreparationUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedFromPreparationOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.DespatchedFromPreparationOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedFromPreparationOnNull() {
                this[this.tablegcv_Hole_Collars.DespatchedFromPreparationOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedFromPreparationUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.DespatchedFromPreparationUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedFromPreparationUserNull() {
                this[this.tablegcv_Hole_Collars.DespatchedFromPreparationUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForAnalysisNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ArrivedForAnalysisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForAnalysisNull() {
                this[this.tablegcv_Hole_Collars.ArrivedForAnalysisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForAnalysisUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ArrivedForAnalysisUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForAnalysisUserNull() {
                this[this.tablegcv_Hole_Collars.ArrivedForAnalysisUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabJobNoNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.LabJobNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabJobNoNull() {
                this[this.tablegcv_Hole_Collars.LabJobNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivedOnNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ReceivedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivedOnNull() {
                this[this.tablegcv_Hole_Collars.ReceivedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivedUserNull() {
                return this.IsNull(this.tablegcv_Hole_Collars.ReceivedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivedUserNull() {
                this[this.tablegcv_Hole_Collars.ReceivedUserColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class psm_Product_SamplesRow : global::System.Data.DataRow {
            
            private psm_Product_SamplesDataTable tablepsm_Product_Samples;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal psm_Product_SamplesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepsm_Product_Samples = ((psm_Product_SamplesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Crusher {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.CrusherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Crusher\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.CrusherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SampledOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepsm_Product_Samples.SampledOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampledOn\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SampledOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampledUser {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.SampledUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampledUser\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SampledUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Shift {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.ShiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shift\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ShiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampleId {
                get {
                    return ((string)(this[this.tablepsm_Product_Samples.SampleIdColumn]));
                }
                set {
                    this[this.tablepsm_Product_Samples.SampleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Weightometer {
                get {
                    try {
                        return ((double)(this[this.tablepsm_Product_Samples.WeightometerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weightometer\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.WeightometerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SampleBucket {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.SampleBucketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleBucket\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SampleBucketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StackerPosition {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.StackerPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StackerPosition\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.StackerPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrimaryFrom {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.PrimaryFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryFrom\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.PrimaryFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrimaryScoops {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.PrimaryScoopsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryScoops\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.PrimaryScoopsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SecondaryFrom {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.SecondaryFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondaryFrom\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SecondaryFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SecondaryScoops {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.SecondaryScoopsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondaryScoops\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SecondaryScoopsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string To {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Submission {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.SubmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Submission\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SubmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instructions {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.InstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instructions\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.InstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Fe {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.FeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fe\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.FeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float SiO2 {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.SiO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiO2\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SiO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Al2O3 {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Al2O3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Al2O3\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Al2O3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float P {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Mn {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.MnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mn\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.MnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float LOI {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.LOIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOI\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.LOIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TotalMass {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.TotalMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMass\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.TotalMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size12_5mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size12_5mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size12_5mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size12_5mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size10_0_12_5mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size10_0_12_5mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size10_0_12_5mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size10_0_12_5mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size9_5_10_0mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size9_5_10_0mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size9_5_10_0mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size9_5_10_0mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size6_7_9_5mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size6_7_9_5mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size6_7_9_5mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size6_7_9_5mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size0_5_6_7mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size0_5_6_7mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size0_5_6_7mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size0_5_6_7mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size0_0_0_5mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size0_0_0_5mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size0_0_0_5mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size0_0_0_5mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Moisture {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.MoistureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moisture\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.MoistureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SubmittedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepsm_Product_Samples.SubmittedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubmittedOn\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SubmittedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubmittedUser {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.SubmittedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubmittedUser\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.SubmittedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DespatchedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepsm_Product_Samples.DespatchedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedOn\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.DespatchedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DespatchedUser {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.DespatchedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedUser\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.DespatchedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ArrivedForPreparation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepsm_Product_Samples.ArrivedForPreparationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForPreparation\' in table \'psm_Product_Samples\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ArrivedForPreparationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArrivedForPreparationUser {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.ArrivedForPreparationUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForPreparationUser\' in table \'psm_Product_Samples\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ArrivedForPreparationUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DespatchedFromPreparationOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepsm_Product_Samples.DespatchedFromPreparationOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedFromPreparationOn\' in table \'psm_Product_Samples\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.DespatchedFromPreparationOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DespatchedFromPreparationUser {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.DespatchedFromPreparationUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchedFromPreparationUser\' in table \'psm_Product_Sample" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.DespatchedFromPreparationUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ArrivedForAnalysis {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepsm_Product_Samples.ArrivedForAnalysisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForAnalysis\' in table \'psm_Product_Samples\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ArrivedForAnalysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArrivedForAnalysisUser {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.ArrivedForAnalysisUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedForAnalysisUser\' in table \'psm_Product_Samples\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ArrivedForAnalysisUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LabJobNo {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.LabJobNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabJobNo\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.LabJobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReceivedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepsm_Product_Samples.ReceivedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedOn\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ReceivedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReceivedUser {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.ReceivedUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedUser\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ReceivedUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Published {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.PublishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Published\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.PublishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Action {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.ActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Action\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.ActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Finger3From {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.Finger3FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger3From\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger3FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Finger3Scoops {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.Finger3ScoopsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger3Scoops\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger3ScoopsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Finger4From {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.Finger4FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger4From\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger4FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Finger4Scoops {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.Finger4ScoopsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger4Scoops\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger4ScoopsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Finger5From {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.Finger5FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger5From\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger5FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Finger5Scoops {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.Finger5ScoopsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger5Scoops\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger5ScoopsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Finger6From {
                get {
                    try {
                        return ((string)(this[this.tablepsm_Product_Samples.Finger6FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger6From\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger6FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Finger6Scoops {
                get {
                    try {
                        return ((int)(this[this.tablepsm_Product_Samples.Finger6ScoopsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finger6Scoops\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Finger6ScoopsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size40mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size40mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size40mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size40mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size6_3_40mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size6_3_40mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size6_3_40mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size6_3_40mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Size0_0_6_3mm {
                get {
                    try {
                        return ((float)(this[this.tablepsm_Product_Samples.Size0_0_6_3mmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size0_0_6_3mm\' in table \'psm_Product_Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepsm_Product_Samples.Size0_0_6_3mmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCrusherNull() {
                return this.IsNull(this.tablepsm_Product_Samples.CrusherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCrusherNull() {
                this[this.tablepsm_Product_Samples.CrusherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampledOnNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SampledOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampledOnNull() {
                this[this.tablepsm_Product_Samples.SampledOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampledUserNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SampledUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampledUserNull() {
                this[this.tablepsm_Product_Samples.SampledUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShiftNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ShiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShiftNull() {
                this[this.tablepsm_Product_Samples.ShiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeightometerNull() {
                return this.IsNull(this.tablepsm_Product_Samples.WeightometerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeightometerNull() {
                this[this.tablepsm_Product_Samples.WeightometerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleBucketNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SampleBucketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleBucketNull() {
                this[this.tablepsm_Product_Samples.SampleBucketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStackerPositionNull() {
                return this.IsNull(this.tablepsm_Product_Samples.StackerPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStackerPositionNull() {
                this[this.tablepsm_Product_Samples.StackerPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrimaryFromNull() {
                return this.IsNull(this.tablepsm_Product_Samples.PrimaryFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrimaryFromNull() {
                this[this.tablepsm_Product_Samples.PrimaryFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrimaryScoopsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.PrimaryScoopsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrimaryScoopsNull() {
                this[this.tablepsm_Product_Samples.PrimaryScoopsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecondaryFromNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SecondaryFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecondaryFromNull() {
                this[this.tablepsm_Product_Samples.SecondaryFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecondaryScoopsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SecondaryScoopsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecondaryScoopsNull() {
                this[this.tablepsm_Product_Samples.SecondaryScoopsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToNull() {
                this[this.tablepsm_Product_Samples.ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentsNull() {
                this[this.tablepsm_Product_Samples.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubmissionNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SubmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubmissionNull() {
                this[this.tablepsm_Product_Samples.SubmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstructionsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.InstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstructionsNull() {
                this[this.tablepsm_Product_Samples.InstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFeNull() {
                return this.IsNull(this.tablepsm_Product_Samples.FeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFeNull() {
                this[this.tablepsm_Product_Samples.FeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSiO2Null() {
                return this.IsNull(this.tablepsm_Product_Samples.SiO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSiO2Null() {
                this[this.tablepsm_Product_Samples.SiO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAl2O3Null() {
                return this.IsNull(this.tablepsm_Product_Samples.Al2O3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAl2O3Null() {
                this[this.tablepsm_Product_Samples.Al2O3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNull() {
                return this.IsNull(this.tablepsm_Product_Samples.PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNull() {
                this[this.tablepsm_Product_Samples.PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSNull() {
                this[this.tablepsm_Product_Samples.SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMnNull() {
                return this.IsNull(this.tablepsm_Product_Samples.MnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMnNull() {
                this[this.tablepsm_Product_Samples.MnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOINull() {
                return this.IsNull(this.tablepsm_Product_Samples.LOIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOINull() {
                this[this.tablepsm_Product_Samples.LOIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMassNull() {
                return this.IsNull(this.tablepsm_Product_Samples.TotalMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMassNull() {
                this[this.tablepsm_Product_Samples.TotalMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize12_5mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size12_5mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize12_5mmNull() {
                this[this.tablepsm_Product_Samples.Size12_5mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize10_0_12_5mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size10_0_12_5mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize10_0_12_5mmNull() {
                this[this.tablepsm_Product_Samples.Size10_0_12_5mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize9_5_10_0mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size9_5_10_0mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize9_5_10_0mmNull() {
                this[this.tablepsm_Product_Samples.Size9_5_10_0mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize6_7_9_5mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size6_7_9_5mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize6_7_9_5mmNull() {
                this[this.tablepsm_Product_Samples.Size6_7_9_5mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize0_5_6_7mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size0_5_6_7mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize0_5_6_7mmNull() {
                this[this.tablepsm_Product_Samples.Size0_5_6_7mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize0_0_0_5mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size0_0_0_5mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize0_0_0_5mmNull() {
                this[this.tablepsm_Product_Samples.Size0_0_0_5mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoistureNull() {
                return this.IsNull(this.tablepsm_Product_Samples.MoistureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoistureNull() {
                this[this.tablepsm_Product_Samples.MoistureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubmittedOnNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SubmittedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubmittedOnNull() {
                this[this.tablepsm_Product_Samples.SubmittedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubmittedUserNull() {
                return this.IsNull(this.tablepsm_Product_Samples.SubmittedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubmittedUserNull() {
                this[this.tablepsm_Product_Samples.SubmittedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedOnNull() {
                return this.IsNull(this.tablepsm_Product_Samples.DespatchedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedOnNull() {
                this[this.tablepsm_Product_Samples.DespatchedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedUserNull() {
                return this.IsNull(this.tablepsm_Product_Samples.DespatchedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedUserNull() {
                this[this.tablepsm_Product_Samples.DespatchedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForPreparationNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ArrivedForPreparationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForPreparationNull() {
                this[this.tablepsm_Product_Samples.ArrivedForPreparationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForPreparationUserNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ArrivedForPreparationUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForPreparationUserNull() {
                this[this.tablepsm_Product_Samples.ArrivedForPreparationUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedFromPreparationOnNull() {
                return this.IsNull(this.tablepsm_Product_Samples.DespatchedFromPreparationOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedFromPreparationOnNull() {
                this[this.tablepsm_Product_Samples.DespatchedFromPreparationOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchedFromPreparationUserNull() {
                return this.IsNull(this.tablepsm_Product_Samples.DespatchedFromPreparationUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchedFromPreparationUserNull() {
                this[this.tablepsm_Product_Samples.DespatchedFromPreparationUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForAnalysisNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ArrivedForAnalysisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForAnalysisNull() {
                this[this.tablepsm_Product_Samples.ArrivedForAnalysisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivedForAnalysisUserNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ArrivedForAnalysisUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivedForAnalysisUserNull() {
                this[this.tablepsm_Product_Samples.ArrivedForAnalysisUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabJobNoNull() {
                return this.IsNull(this.tablepsm_Product_Samples.LabJobNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabJobNoNull() {
                this[this.tablepsm_Product_Samples.LabJobNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivedOnNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ReceivedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivedOnNull() {
                this[this.tablepsm_Product_Samples.ReceivedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivedUserNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ReceivedUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivedUserNull() {
                this[this.tablepsm_Product_Samples.ReceivedUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublishedNull() {
                return this.IsNull(this.tablepsm_Product_Samples.PublishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublishedNull() {
                this[this.tablepsm_Product_Samples.PublishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActionNull() {
                return this.IsNull(this.tablepsm_Product_Samples.ActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActionNull() {
                this[this.tablepsm_Product_Samples.ActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger3FromNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger3FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger3FromNull() {
                this[this.tablepsm_Product_Samples.Finger3FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger3ScoopsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger3ScoopsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger3ScoopsNull() {
                this[this.tablepsm_Product_Samples.Finger3ScoopsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger4FromNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger4FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger4FromNull() {
                this[this.tablepsm_Product_Samples.Finger4FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger4ScoopsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger4ScoopsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger4ScoopsNull() {
                this[this.tablepsm_Product_Samples.Finger4ScoopsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger5FromNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger5FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger5FromNull() {
                this[this.tablepsm_Product_Samples.Finger5FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger5ScoopsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger5ScoopsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger5ScoopsNull() {
                this[this.tablepsm_Product_Samples.Finger5ScoopsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger6FromNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger6FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger6FromNull() {
                this[this.tablepsm_Product_Samples.Finger6FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinger6ScoopsNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Finger6ScoopsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinger6ScoopsNull() {
                this[this.tablepsm_Product_Samples.Finger6ScoopsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize40mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size40mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize40mmNull() {
                this[this.tablepsm_Product_Samples.Size40mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize6_3_40mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size6_3_40mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize6_3_40mmNull() {
                this[this.tablepsm_Product_Samples.Size6_3_40mmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSize0_0_6_3mmNull() {
                return this.IsNull(this.tablepsm_Product_Samples.Size0_0_6_3mmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSize0_0_6_3mmNull() {
                this[this.tablepsm_Product_Samples.Size0_0_6_3mmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class gcv_Hole_CollarsRowChangeEvent : global::System.EventArgs {
            
            private gcv_Hole_CollarsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gcv_Hole_CollarsRowChangeEvent(gcv_Hole_CollarsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gcv_Hole_CollarsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class psm_Product_SamplesRowChangeEvent : global::System.EventArgs {
            
            private psm_Product_SamplesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public psm_Product_SamplesRowChangeEvent(psm_Product_SamplesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public psm_Product_SamplesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AtlasSampleManager.SamplesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class gcv_Hole_CollarsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public gcv_Hole_CollarsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "gcv_Hole_Collars";
            tableMapping.ColumnMappings.Add("Pit", "Pit");
            tableMapping.ColumnMappings.Add("Bench", "Bench");
            tableMapping.ColumnMappings.Add("ShotNo", "ShotNo");
            tableMapping.ColumnMappings.Add("HoleNo", "HoleNo");
            tableMapping.ColumnMappings.Add("PlanEasting", "PlanEasting");
            tableMapping.ColumnMappings.Add("PlanNorthing", "PlanNorthing");
            tableMapping.ColumnMappings.Add("PlanElevation", "PlanElevation");
            tableMapping.ColumnMappings.Add("ActualEasting", "ActualEasting");
            tableMapping.ColumnMappings.Add("ActualNorthing", "ActualNorthing");
            tableMapping.ColumnMappings.Add("ActualElevation", "ActualElevation");
            tableMapping.ColumnMappings.Add("InterceptDepth", "InterceptDepth");
            tableMapping.ColumnMappings.Add("Bearing", "Bearing");
            tableMapping.ColumnMappings.Add("Inclination", "Inclination");
            tableMapping.ColumnMappings.Add("MaterialType", "MaterialType");
            tableMapping.ColumnMappings.Add("Fe", "Fe");
            tableMapping.ColumnMappings.Add("SiO2", "SiO2");
            tableMapping.ColumnMappings.Add("Al2O3", "Al2O3");
            tableMapping.ColumnMappings.Add("P", "P");
            tableMapping.ColumnMappings.Add("S", "S");
            tableMapping.ColumnMappings.Add("Mn", "Mn");
            tableMapping.ColumnMappings.Add("LOI", "LOI");
            tableMapping.ColumnMappings.Add("Gangue", "Gangue");
            tableMapping.ColumnMappings.Add("LogMatType", "LogMatType");
            tableMapping.ColumnMappings.Add("LogOtherMatType", "LogOtherMatType");
            tableMapping.ColumnMappings.Add("LogTopMatType", "LogTopMatType");
            tableMapping.ColumnMappings.Add("LogBottomMatType", "LogBottomMatType");
            tableMapping.ColumnMappings.Add("LogTopColour", "LogTopColour");
            tableMapping.ColumnMappings.Add("LogBottomColour", "LogBottomColour");
            tableMapping.ColumnMappings.Add("LogReference", "LogReference");
            tableMapping.ColumnMappings.Add("LogComments", "LogComments");
            tableMapping.ColumnMappings.Add("LoggedUser", "LoggedUser");
            tableMapping.ColumnMappings.Add("LoggedOn", "LoggedOn");
            tableMapping.ColumnMappings.Add("LogValidatedOn", "LogValidatedOn");
            tableMapping.ColumnMappings.Add("SampleId", "SampleId");
            tableMapping.ColumnMappings.Add("Submission", "Submission");
            tableMapping.ColumnMappings.Add("Instructions", "Instructions");
            tableMapping.ColumnMappings.Add("DesignedOn", "DesignedOn");
            tableMapping.ColumnMappings.Add("DesignedUser", "DesignedUser");
            tableMapping.ColumnMappings.Add("SelectedOn", "SelectedOn");
            tableMapping.ColumnMappings.Add("SelectedUser", "SelectedUser");
            tableMapping.ColumnMappings.Add("SampledOn", "SampledOn");
            tableMapping.ColumnMappings.Add("SampledUser", "SampledUser");
            tableMapping.ColumnMappings.Add("SubmittedOn", "SubmittedOn");
            tableMapping.ColumnMappings.Add("SubmittedUser", "SubmittedUser");
            tableMapping.ColumnMappings.Add("DespatchedOn", "DespatchedOn");
            tableMapping.ColumnMappings.Add("DespatchedUser", "DespatchedUser");
            tableMapping.ColumnMappings.Add("ArrivedForPreparation", "ArrivedForPreparation");
            tableMapping.ColumnMappings.Add("ArrivedForPreparationUser", "ArrivedForPreparationUser");
            tableMapping.ColumnMappings.Add("DespatchedFromPreparationOn", "DespatchedFromPreparationOn");
            tableMapping.ColumnMappings.Add("DespatchedFromPreparationUser", "DespatchedFromPreparationUser");
            tableMapping.ColumnMappings.Add("ArrivedForAnalysis", "ArrivedForAnalysis");
            tableMapping.ColumnMappings.Add("ArrivedForAnalysisUser", "ArrivedForAnalysisUser");
            tableMapping.ColumnMappings.Add("LabJobNo", "LabJobNo");
            tableMapping.ColumnMappings.Add("ReceivedOn", "ReceivedOn");
            tableMapping.ColumnMappings.Add("ReceivedUser", "ReceivedUser");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [gcv_Hole_Collars] WHERE (([Pit] = @Original_Pit) AND ([Bench] = @Ori" +
                "ginal_Bench) AND ([ShotNo] = @Original_ShotNo) AND ([HoleNo] = @Original_HoleNo)" +
                " AND ([PlanEasting] = @Original_PlanEasting) AND ([PlanNorthing] = @Original_Pla" +
                "nNorthing) AND ([PlanElevation] = @Original_PlanElevation) AND ((@IsNull_ActualE" +
                "asting = 1 AND [ActualEasting] IS NULL) OR ([ActualEasting] = @Original_ActualEa" +
                "sting)) AND ((@IsNull_ActualNorthing = 1 AND [ActualNorthing] IS NULL) OR ([Actu" +
                "alNorthing] = @Original_ActualNorthing)) AND ((@IsNull_ActualElevation = 1 AND [" +
                "ActualElevation] IS NULL) OR ([ActualElevation] = @Original_ActualElevation)) AN" +
                "D ((@IsNull_InterceptDepth = 1 AND [InterceptDepth] IS NULL) OR ([InterceptDepth" +
                "] = @Original_InterceptDepth)) AND ((@IsNull_Bearing = 1 AND [Bearing] IS NULL) " +
                "OR ([Bearing] = @Original_Bearing)) AND ((@IsNull_Inclination = 1 AND [Inclinati" +
                "on] IS NULL) OR ([Inclination] = @Original_Inclination)) AND ((@IsNull_MaterialT" +
                "ype = 1 AND [MaterialType] IS NULL) OR ([MaterialType] = @Original_MaterialType)" +
                ") AND ((@IsNull_Fe = 1 AND [Fe] IS NULL) OR ([Fe] = @Original_Fe)) AND ((@IsNull" +
                "_SiO2 = 1 AND [SiO2] IS NULL) OR ([SiO2] = @Original_SiO2)) AND ((@IsNull_Al2O3 " +
                "= 1 AND [Al2O3] IS NULL) OR ([Al2O3] = @Original_Al2O3)) AND ((@IsNull_P = 1 AND" +
                " [P] IS NULL) OR ([P] = @Original_P)) AND ((@IsNull_S = 1 AND [S] IS NULL) OR ([" +
                "S] = @Original_S)) AND ((@IsNull_Mn = 1 AND [Mn] IS NULL) OR ([Mn] = @Original_M" +
                "n)) AND ((@IsNull_LOI = 1 AND [LOI] IS NULL) OR ([LOI] = @Original_LOI)) AND ((@" +
                "IsNull_Gangue = 1 AND [Gangue] IS NULL) OR ([Gangue] = @Original_Gangue)) AND ((" +
                "@IsNull_LogMatType = 1 AND [LogMatType] IS NULL) OR ([LogMatType] = @Original_Lo" +
                "gMatType)) AND ((@IsNull_LogOtherMatType = 1 AND [LogOtherMatType] IS NULL) OR (" +
                "[LogOtherMatType] = @Original_LogOtherMatType)) AND ((@IsNull_LogTopMatType = 1 " +
                "AND [LogTopMatType] IS NULL) OR ([LogTopMatType] = @Original_LogTopMatType)) AND" +
                " ((@IsNull_LogBottomMatType = 1 AND [LogBottomMatType] IS NULL) OR ([LogBottomMa" +
                "tType] = @Original_LogBottomMatType)) AND ((@IsNull_LogTopColour = 1 AND [LogTop" +
                "Colour] IS NULL) OR ([LogTopColour] = @Original_LogTopColour)) AND ((@IsNull_Log" +
                "BottomColour = 1 AND [LogBottomColour] IS NULL) OR ([LogBottomColour] = @Origina" +
                "l_LogBottomColour)) AND ((@IsNull_LogReference = 1 AND [LogReference] IS NULL) O" +
                "R ([LogReference] = @Original_LogReference)) AND ((@IsNull_LogComments = 1 AND [" +
                "LogComments] IS NULL) OR ([LogComments] = @Original_LogComments)) AND ((@IsNull_" +
                "LoggedUser = 1 AND [LoggedUser] IS NULL) OR ([LoggedUser] = @Original_LoggedUser" +
                ")) AND ((@IsNull_LoggedOn = 1 AND [LoggedOn] IS NULL) OR ([LoggedOn] = @Original" +
                "_LoggedOn)) AND ((@IsNull_LogValidatedOn = 1 AND [LogValidatedOn] IS NULL) OR ([" +
                "LogValidatedOn] = @Original_LogValidatedOn)) AND ((@IsNull_SampleId = 1 AND [Sam" +
                "pleId] IS NULL) OR ([SampleId] = @Original_SampleId)) AND ((@IsNull_Submission =" +
                " 1 AND [Submission] IS NULL) OR ([Submission] = @Original_Submission)) AND ((@Is" +
                "Null_Instructions = 1 AND [Instructions] IS NULL) OR ([Instructions] = @Original" +
                "_Instructions)) AND ((@IsNull_DesignedOn = 1 AND [DesignedOn] IS NULL) OR ([Desi" +
                "gnedOn] = @Original_DesignedOn)) AND ((@IsNull_DesignedUser = 1 AND [DesignedUse" +
                "r] IS NULL) OR ([DesignedUser] = @Original_DesignedUser)) AND ((@IsNull_Selected" +
                "On = 1 AND [SelectedOn] IS NULL) OR ([SelectedOn] = @Original_SelectedOn)) AND (" +
                "(@IsNull_SelectedUser = 1 AND [SelectedUser] IS NULL) OR ([SelectedUser] = @Orig" +
                "inal_SelectedUser)) AND ((@IsNull_SampledOn = 1 AND [SampledOn] IS NULL) OR ([Sa" +
                "mpledOn] = @Original_SampledOn)) AND ((@IsNull_SampledUser = 1 AND [SampledUser]" +
                " IS NULL) OR ([SampledUser] = @Original_SampledUser)) AND ((@IsNull_SubmittedOn " +
                "= 1 AND [SubmittedOn] IS NULL) OR ([SubmittedOn] = @Original_SubmittedOn)) AND (" +
                "(@IsNull_SubmittedUser = 1 AND [SubmittedUser] IS NULL) OR ([SubmittedUser] = @O" +
                "riginal_SubmittedUser)) AND ((@IsNull_DespatchedOn = 1 AND [DespatchedOn] IS NUL" +
                "L) OR ([DespatchedOn] = @Original_DespatchedOn)) AND ((@IsNull_DespatchedUser = " +
                "1 AND [DespatchedUser] IS NULL) OR ([DespatchedUser] = @Original_DespatchedUser)" +
                ") AND ((@IsNull_ArrivedForPreparation = 1 AND [ArrivedForPreparation] IS NULL) O" +
                "R ([ArrivedForPreparation] = @Original_ArrivedForPreparation)) AND ((@IsNull_Arr" +
                "ivedForPreparationUser = 1 AND [ArrivedForPreparationUser] IS NULL) OR ([Arrived" +
                "ForPreparationUser] = @Original_ArrivedForPreparationUser)) AND ((@IsNull_Despat" +
                "chedFromPreparationOn = 1 AND [DespatchedFromPreparationOn] IS NULL) OR ([Despat" +
                "chedFromPreparationOn] = @Original_DespatchedFromPreparationOn)) AND ((@IsNull_D" +
                "espatchedFromPreparationUser = 1 AND [DespatchedFromPreparationUser] IS NULL) OR" +
                " ([DespatchedFromPreparationUser] = @Original_DespatchedFromPreparationUser)) AN" +
                "D ((@IsNull_ArrivedForAnalysis = 1 AND [ArrivedForAnalysis] IS NULL) OR ([Arrive" +
                "dForAnalysis] = @Original_ArrivedForAnalysis)) AND ((@IsNull_ArrivedForAnalysisU" +
                "ser = 1 AND [ArrivedForAnalysisUser] IS NULL) OR ([ArrivedForAnalysisUser] = @Or" +
                "iginal_ArrivedForAnalysisUser)) AND ((@IsNull_LabJobNo = 1 AND [LabJobNo] IS NUL" +
                "L) OR ([LabJobNo] = @Original_LabJobNo)) AND ((@IsNull_ReceivedOn = 1 AND [Recei" +
                "vedOn] IS NULL) OR ([ReceivedOn] = @Original_ReceivedOn)) AND ((@IsNull_Received" +
                "User = 1 AND [ReceivedUser] IS NULL) OR ([ReceivedUser] = @Original_ReceivedUser" +
                ")))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bench", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bench", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShotNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShotNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoleNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoleNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanEasting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanNorthing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanElevation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualEasting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualEasting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualEasting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualNorthing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualNorthing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualNorthing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualElevation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualElevation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualElevation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InterceptDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterceptDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InterceptDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterceptDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bearing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bearing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bearing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bearing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inclination", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inclination", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inclination", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inclination", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaterialType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SiO2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Al2O3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LOI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gangue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gangue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gangue", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gangue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogOtherMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogOtherMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogOtherMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogOtherMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogTopMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogTopMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogBottomMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogBottomMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogTopColour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopColour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogTopColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopColour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogBottomColour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomColour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogBottomColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomColour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogReference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogReference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogReference", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogReference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogComments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogComments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogComments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogComments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoggedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoggedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoggedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoggedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogValidatedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogValidatedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogValidatedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogValidatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Submission", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Instructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DesignedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesignedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DesignedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesignedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SelectedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SelectedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysisUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [gcv_Hole_Collars] ([Pit], [Bench], [ShotNo], [HoleNo], [PlanEasting]" +
                ", [PlanNorthing], [PlanElevation], [ActualEasting], [ActualNorthing], [ActualEle" +
                "vation], [InterceptDepth], [Bearing], [Inclination], [MaterialType], [Fe], [SiO2" +
                "], [Al2O3], [P], [S], [Mn], [LOI], [Gangue], [LogMatType], [LogOtherMatType], [L" +
                "ogTopMatType], [LogBottomMatType], [LogTopColour], [LogBottomColour], [LogRefere" +
                "nce], [LogComments], [LoggedUser], [LoggedOn], [LogValidatedOn], [SampleId], [Su" +
                "bmission], [Instructions], [DesignedOn], [DesignedUser], [SelectedOn], [Selected" +
                "User], [SampledOn], [SampledUser], [SubmittedOn], [SubmittedUser], [DespatchedOn" +
                "], [DespatchedUser], [ArrivedForPreparation], [ArrivedForPreparationUser], [Desp" +
                "atchedFromPreparationOn], [DespatchedFromPreparationUser], [ArrivedForAnalysis]," +
                " [ArrivedForAnalysisUser], [LabJobNo], [ReceivedOn], [ReceivedUser]) VALUES (@Pi" +
                "t, @Bench, @ShotNo, @HoleNo, @PlanEasting, @PlanNorthing, @PlanElevation, @Actua" +
                "lEasting, @ActualNorthing, @ActualElevation, @InterceptDepth, @Bearing, @Inclina" +
                "tion, @MaterialType, @Fe, @SiO2, @Al2O3, @P, @S, @Mn, @LOI, @Gangue, @LogMatType" +
                ", @LogOtherMatType, @LogTopMatType, @LogBottomMatType, @LogTopColour, @LogBottom" +
                "Colour, @LogReference, @LogComments, @LoggedUser, @LoggedOn, @LogValidatedOn, @S" +
                "ampleId, @Submission, @Instructions, @DesignedOn, @DesignedUser, @SelectedOn, @S" +
                "electedUser, @SampledOn, @SampledUser, @SubmittedOn, @SubmittedUser, @Despatched" +
                "On, @DespatchedUser, @ArrivedForPreparation, @ArrivedForPreparationUser, @Despat" +
                "chedFromPreparationOn, @DespatchedFromPreparationUser, @ArrivedForAnalysis, @Arr" +
                "ivedForAnalysisUser, @LabJobNo, @ReceivedOn, @ReceivedUser);\r\nSELECT Pit, Bench," +
                " ShotNo, HoleNo, PlanEasting, PlanNorthing, PlanElevation, ActualEasting, Actual" +
                "Northing, ActualElevation, InterceptDepth, Bearing, Inclination, MaterialType, F" +
                "e, SiO2, Al2O3, P, S, Mn, LOI, Gangue, LogMatType, LogOtherMatType, LogTopMatTyp" +
                "e, LogBottomMatType, LogTopColour, LogBottomColour, LogReference, LogComments, L" +
                "oggedUser, LoggedOn, LogValidatedOn, SampleId, Submission, Instructions, Designe" +
                "dOn, DesignedUser, SelectedOn, SelectedUser, SampledOn, SampledUser, SubmittedOn" +
                ", SubmittedUser, DespatchedOn, DespatchedUser, ArrivedForPreparation, ArrivedFor" +
                "PreparationUser, DespatchedFromPreparationOn, DespatchedFromPreparationUser, Arr" +
                "ivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, ReceivedOn, ReceivedUser FROM" +
                " gcv_Hole_Collars WHERE (Bench = @Bench) AND (HoleNo = @HoleNo) AND (Pit = @Pit)" +
                " AND (ShotNo = @ShotNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bench", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bench", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShotNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShotNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoleNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoleNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanEasting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanNorthing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanElevation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualEasting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualNorthing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualElevation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterceptDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterceptDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bearing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bearing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inclination", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inclination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gangue", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gangue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogOtherMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogOtherMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogTopMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogBottomMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogTopColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopColour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogBottomColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomColour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogReference", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogReference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogComments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogComments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoggedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoggedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogValidatedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogValidatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesignedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesignedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [gcv_Hole_Collars] SET [Pit] = @Pit, [Bench] = @Bench, [ShotNo] = @ShotNo," +
                " [HoleNo] = @HoleNo, [PlanEasting] = @PlanEasting, [PlanNorthing] = @PlanNorthin" +
                "g, [PlanElevation] = @PlanElevation, [ActualEasting] = @ActualEasting, [ActualNo" +
                "rthing] = @ActualNorthing, [ActualElevation] = @ActualElevation, [InterceptDepth" +
                "] = @InterceptDepth, [Bearing] = @Bearing, [Inclination] = @Inclination, [Materi" +
                "alType] = @MaterialType, [Fe] = @Fe, [SiO2] = @SiO2, [Al2O3] = @Al2O3, [P] = @P," +
                " [S] = @S, [Mn] = @Mn, [LOI] = @LOI, [Gangue] = @Gangue, [LogMatType] = @LogMatT" +
                "ype, [LogOtherMatType] = @LogOtherMatType, [LogTopMatType] = @LogTopMatType, [Lo" +
                "gBottomMatType] = @LogBottomMatType, [LogTopColour] = @LogTopColour, [LogBottomC" +
                "olour] = @LogBottomColour, [LogReference] = @LogReference, [LogComments] = @LogC" +
                "omments, [LoggedUser] = @LoggedUser, [LoggedOn] = @LoggedOn, [LogValidatedOn] = " +
                "@LogValidatedOn, [SampleId] = @SampleId, [Submission] = @Submission, [Instructio" +
                "ns] = @Instructions, [DesignedOn] = @DesignedOn, [DesignedUser] = @DesignedUser," +
                " [SelectedOn] = @SelectedOn, [SelectedUser] = @SelectedUser, [SampledOn] = @Samp" +
                "ledOn, [SampledUser] = @SampledUser, [SubmittedOn] = @SubmittedOn, [SubmittedUse" +
                "r] = @SubmittedUser, [DespatchedOn] = @DespatchedOn, [DespatchedUser] = @Despatc" +
                "hedUser, [ArrivedForPreparation] = @ArrivedForPreparation, [ArrivedForPreparatio" +
                "nUser] = @ArrivedForPreparationUser, [DespatchedFromPreparationOn] = @Despatched" +
                "FromPreparationOn, [DespatchedFromPreparationUser] = @DespatchedFromPreparationU" +
                "ser, [ArrivedForAnalysis] = @ArrivedForAnalysis, [ArrivedForAnalysisUser] = @Arr" +
                "ivedForAnalysisUser, [LabJobNo] = @LabJobNo, [ReceivedOn] = @ReceivedOn, [Receiv" +
                "edUser] = @ReceivedUser WHERE (([Pit] = @Original_Pit) AND ([Bench] = @Original_" +
                "Bench) AND ([ShotNo] = @Original_ShotNo) AND ([HoleNo] = @Original_HoleNo) AND (" +
                "[PlanEasting] = @Original_PlanEasting) AND ([PlanNorthing] = @Original_PlanNorth" +
                "ing) AND ([PlanElevation] = @Original_PlanElevation) AND ((@IsNull_ActualEasting" +
                " = 1 AND [ActualEasting] IS NULL) OR ([ActualEasting] = @Original_ActualEasting)" +
                ") AND ((@IsNull_ActualNorthing = 1 AND [ActualNorthing] IS NULL) OR ([ActualNort" +
                "hing] = @Original_ActualNorthing)) AND ((@IsNull_ActualElevation = 1 AND [Actual" +
                "Elevation] IS NULL) OR ([ActualElevation] = @Original_ActualElevation)) AND ((@I" +
                "sNull_InterceptDepth = 1 AND [InterceptDepth] IS NULL) OR ([InterceptDepth] = @O" +
                "riginal_InterceptDepth)) AND ((@IsNull_Bearing = 1 AND [Bearing] IS NULL) OR ([B" +
                "earing] = @Original_Bearing)) AND ((@IsNull_Inclination = 1 AND [Inclination] IS" +
                " NULL) OR ([Inclination] = @Original_Inclination)) AND ((@IsNull_MaterialType = " +
                "1 AND [MaterialType] IS NULL) OR ([MaterialType] = @Original_MaterialType)) AND " +
                "((@IsNull_Fe = 1 AND [Fe] IS NULL) OR ([Fe] = @Original_Fe)) AND ((@IsNull_SiO2 " +
                "= 1 AND [SiO2] IS NULL) OR ([SiO2] = @Original_SiO2)) AND ((@IsNull_Al2O3 = 1 AN" +
                "D [Al2O3] IS NULL) OR ([Al2O3] = @Original_Al2O3)) AND ((@IsNull_P = 1 AND [P] I" +
                "S NULL) OR ([P] = @Original_P)) AND ((@IsNull_S = 1 AND [S] IS NULL) OR ([S] = @" +
                "Original_S)) AND ((@IsNull_Mn = 1 AND [Mn] IS NULL) OR ([Mn] = @Original_Mn)) AN" +
                "D ((@IsNull_LOI = 1 AND [LOI] IS NULL) OR ([LOI] = @Original_LOI)) AND ((@IsNull" +
                "_Gangue = 1 AND [Gangue] IS NULL) OR ([Gangue] = @Original_Gangue)) AND ((@IsNul" +
                "l_LogMatType = 1 AND [LogMatType] IS NULL) OR ([LogMatType] = @Original_LogMatTy" +
                "pe)) AND ((@IsNull_LogOtherMatType = 1 AND [LogOtherMatType] IS NULL) OR ([LogOt" +
                "herMatType] = @Original_LogOtherMatType)) AND ((@IsNull_LogTopMatType = 1 AND [L" +
                "ogTopMatType] IS NULL) OR ([LogTopMatType] = @Original_LogTopMatType)) AND ((@Is" +
                "Null_LogBottomMatType = 1 AND [LogBottomMatType] IS NULL) OR ([LogBottomMatType]" +
                " = @Original_LogBottomMatType)) AND ((@IsNull_LogTopColour = 1 AND [LogTopColour" +
                "] IS NULL) OR ([LogTopColour] = @Original_LogTopColour)) AND ((@IsNull_LogBottom" +
                "Colour = 1 AND [LogBottomColour] IS NULL) OR ([LogBottomColour] = @Original_LogB" +
                "ottomColour)) AND ((@IsNull_LogReference = 1 AND [LogReference] IS NULL) OR ([Lo" +
                "gReference] = @Original_LogReference)) AND ((@IsNull_LogComments = 1 AND [LogCom" +
                "ments] IS NULL) OR ([LogComments] = @Original_LogComments)) AND ((@IsNull_Logged" +
                "User = 1 AND [LoggedUser] IS NULL) OR ([LoggedUser] = @Original_LoggedUser)) AND" +
                " ((@IsNull_LoggedOn = 1 AND [LoggedOn] IS NULL) OR ([LoggedOn] = @Original_Logge" +
                "dOn)) AND ((@IsNull_LogValidatedOn = 1 AND [LogValidatedOn] IS NULL) OR ([LogVal" +
                "idatedOn] = @Original_LogValidatedOn)) AND ((@IsNull_SampleId = 1 AND [SampleId]" +
                " IS NULL) OR ([SampleId] = @Original_SampleId)) AND ((@IsNull_Submission = 1 AND" +
                " [Submission] IS NULL) OR ([Submission] = @Original_Submission)) AND ((@IsNull_I" +
                "nstructions = 1 AND [Instructions] IS NULL) OR ([Instructions] = @Original_Instr" +
                "uctions)) AND ((@IsNull_DesignedOn = 1 AND [DesignedOn] IS NULL) OR ([DesignedOn" +
                "] = @Original_DesignedOn)) AND ((@IsNull_DesignedUser = 1 AND [DesignedUser] IS " +
                "NULL) OR ([DesignedUser] = @Original_DesignedUser)) AND ((@IsNull_SelectedOn = 1" +
                " AND [SelectedOn] IS NULL) OR ([SelectedOn] = @Original_SelectedOn)) AND ((@IsNu" +
                "ll_SelectedUser = 1 AND [SelectedUser] IS NULL) OR ([SelectedUser] = @Original_S" +
                "electedUser)) AND ((@IsNull_SampledOn = 1 AND [SampledOn] IS NULL) OR ([SampledO" +
                "n] = @Original_SampledOn)) AND ((@IsNull_SampledUser = 1 AND [SampledUser] IS NU" +
                "LL) OR ([SampledUser] = @Original_SampledUser)) AND ((@IsNull_SubmittedOn = 1 AN" +
                "D [SubmittedOn] IS NULL) OR ([SubmittedOn] = @Original_SubmittedOn)) AND ((@IsNu" +
                "ll_SubmittedUser = 1 AND [SubmittedUser] IS NULL) OR ([SubmittedUser] = @Origina" +
                "l_SubmittedUser)) AND ((@IsNull_DespatchedOn = 1 AND [DespatchedOn] IS NULL) OR " +
                "([DespatchedOn] = @Original_DespatchedOn)) AND ((@IsNull_DespatchedUser = 1 AND " +
                "[DespatchedUser] IS NULL) OR ([DespatchedUser] = @Original_DespatchedUser)) AND " +
                "((@IsNull_ArrivedForPreparation = 1 AND [ArrivedForPreparation] IS NULL) OR ([Ar" +
                "rivedForPreparation] = @Original_ArrivedForPreparation)) AND ((@IsNull_ArrivedFo" +
                "rPreparationUser = 1 AND [ArrivedForPreparationUser] IS NULL) OR ([ArrivedForPre" +
                "parationUser] = @Original_ArrivedForPreparationUser)) AND ((@IsNull_DespatchedFr" +
                "omPreparationOn = 1 AND [DespatchedFromPreparationOn] IS NULL) OR ([DespatchedFr" +
                "omPreparationOn] = @Original_DespatchedFromPreparationOn)) AND ((@IsNull_Despatc" +
                "hedFromPreparationUser = 1 AND [DespatchedFromPreparationUser] IS NULL) OR ([Des" +
                "patchedFromPreparationUser] = @Original_DespatchedFromPreparationUser)) AND ((@I" +
                "sNull_ArrivedForAnalysis = 1 AND [ArrivedForAnalysis] IS NULL) OR ([ArrivedForAn" +
                "alysis] = @Original_ArrivedForAnalysis)) AND ((@IsNull_ArrivedForAnalysisUser = " +
                "1 AND [ArrivedForAnalysisUser] IS NULL) OR ([ArrivedForAnalysisUser] = @Original" +
                "_ArrivedForAnalysisUser)) AND ((@IsNull_LabJobNo = 1 AND [LabJobNo] IS NULL) OR " +
                "([LabJobNo] = @Original_LabJobNo)) AND ((@IsNull_ReceivedOn = 1 AND [ReceivedOn]" +
                " IS NULL) OR ([ReceivedOn] = @Original_ReceivedOn)) AND ((@IsNull_ReceivedUser =" +
                " 1 AND [ReceivedUser] IS NULL) OR ([ReceivedUser] = @Original_ReceivedUser)));\r\n" +
                "SELECT Pit, Bench, ShotNo, HoleNo, PlanEasting, PlanNorthing, PlanElevation, Act" +
                "ualEasting, ActualNorthing, ActualElevation, InterceptDepth, Bearing, Inclinatio" +
                "n, MaterialType, Fe, SiO2, Al2O3, P, S, Mn, LOI, Gangue, LogMatType, LogOtherMat" +
                "Type, LogTopMatType, LogBottomMatType, LogTopColour, LogBottomColour, LogReferen" +
                "ce, LogComments, LoggedUser, LoggedOn, LogValidatedOn, SampleId, Submission, Ins" +
                "tructions, DesignedOn, DesignedUser, SelectedOn, SelectedUser, SampledOn, Sample" +
                "dUser, SubmittedOn, SubmittedUser, DespatchedOn, DespatchedUser, ArrivedForPrepa" +
                "ration, ArrivedForPreparationUser, DespatchedFromPreparationOn, DespatchedFromPr" +
                "eparationUser, ArrivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, ReceivedOn," +
                " ReceivedUser FROM gcv_Hole_Collars WHERE (Bench = @Bench) AND (HoleNo = @HoleNo" +
                ") AND (Pit = @Pit) AND (ShotNo = @ShotNo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bench", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bench", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShotNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShotNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoleNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoleNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanEasting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanNorthing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlanElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanElevation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualEasting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualNorthing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualElevation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterceptDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterceptDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bearing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bearing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inclination", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inclination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gangue", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gangue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogOtherMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogOtherMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogTopMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogBottomMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomMatType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogTopColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopColour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogBottomColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomColour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogReference", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogReference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogComments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogComments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoggedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoggedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogValidatedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogValidatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesignedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesignedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bench", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bench", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShotNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShotNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoleNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoleNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanEasting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanNorthing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlanElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlanElevation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualEasting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualEasting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualEasting", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualEasting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualNorthing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualNorthing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualNorthing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualNorthing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualElevation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualElevation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualElevation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualElevation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InterceptDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterceptDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InterceptDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterceptDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bearing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bearing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bearing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bearing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inclination", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inclination", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inclination", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inclination", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaterialType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaterialType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SiO2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Al2O3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LOI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gangue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gangue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gangue", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gangue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogOtherMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogOtherMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogOtherMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogOtherMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogTopMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogTopMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogBottomMatType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomMatType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogBottomMatType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomMatType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogTopColour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopColour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogTopColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogTopColour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogBottomColour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomColour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogBottomColour", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogBottomColour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogReference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogReference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogReference", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogReference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogComments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogComments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogComments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogComments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoggedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoggedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoggedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoggedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoggedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogValidatedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogValidatedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogValidatedOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogValidatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Submission", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Instructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DesignedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesignedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DesignedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesignedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SelectedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SelectedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysisUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AtlasSampleManager.Properties.Settings.Default.AtlasGradeControlDatabase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Pit, Bench, ShotNo, HoleNo, PlanEasting, PlanNorthing, PlanElevation, ActualEasting, ActualNorthing, ActualElevation, InterceptDepth, Bearing, Inclination, MaterialType, Fe, SiO2, Al2O3, P, S, Mn, LOI, Gangue, LogMatType, LogOtherMatType, LogTopMatType, LogBottomMatType, LogTopColour, LogBottomColour, LogReference, LogComments, LoggedUser, LoggedOn, LogValidatedOn, SampleId, Submission, Instructions, DesignedOn, DesignedUser, SelectedOn, SelectedUser, SampledOn, SampledUser, SubmittedOn, SubmittedUser, DespatchedOn, DespatchedUser, ArrivedForPreparation, ArrivedForPreparationUser, DespatchedFromPreparationOn, DespatchedFromPreparationUser, ArrivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, ReceivedOn, ReceivedUser FROM gcv_Hole_Collars";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Samples.gcv_Hole_CollarsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Samples.gcv_Hole_CollarsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Samples.gcv_Hole_CollarsDataTable dataTable = new Samples.gcv_Hole_CollarsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Samples.gcv_Hole_CollarsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Samples dataSet) {
            return this.Adapter.Update(dataSet, "gcv_Hole_Collars");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Pit, 
                    string Original_Bench, 
                    string Original_ShotNo, 
                    string Original_HoleNo, 
                    double Original_PlanEasting, 
                    double Original_PlanNorthing, 
                    double Original_PlanElevation, 
                    global::System.Nullable<double> Original_ActualEasting, 
                    global::System.Nullable<double> Original_ActualNorthing, 
                    global::System.Nullable<double> Original_ActualElevation, 
                    global::System.Nullable<double> Original_InterceptDepth, 
                    global::System.Nullable<double> Original_Bearing, 
                    global::System.Nullable<double> Original_Inclination, 
                    string Original_MaterialType, 
                    global::System.Nullable<float> Original_Fe, 
                    global::System.Nullable<float> Original_SiO2, 
                    global::System.Nullable<float> Original_Al2O3, 
                    global::System.Nullable<float> Original_P, 
                    global::System.Nullable<float> Original_S, 
                    global::System.Nullable<float> Original_Mn, 
                    global::System.Nullable<float> Original_LOI, 
                    global::System.Nullable<float> Original_Gangue, 
                    string Original_LogMatType, 
                    string Original_LogOtherMatType, 
                    string Original_LogTopMatType, 
                    string Original_LogBottomMatType, 
                    string Original_LogTopColour, 
                    string Original_LogBottomColour, 
                    string Original_LogReference, 
                    string Original_LogComments, 
                    string Original_LoggedUser, 
                    string Original_LoggedOn, 
                    string Original_LogValidatedOn, 
                    string Original_SampleId, 
                    string Original_Submission, 
                    string Original_Instructions, 
                    global::System.Nullable<global::System.DateTime> Original_DesignedOn, 
                    string Original_DesignedUser, 
                    global::System.Nullable<global::System.DateTime> Original_SelectedOn, 
                    string Original_SelectedUser, 
                    global::System.Nullable<global::System.DateTime> Original_SampledOn, 
                    string Original_SampledUser, 
                    global::System.Nullable<global::System.DateTime> Original_SubmittedOn, 
                    string Original_SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedOn, 
                    string Original_DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForPreparation, 
                    string Original_ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedFromPreparationOn, 
                    string Original_DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForAnalysis, 
                    string Original_ArrivedForAnalysisUser, 
                    string Original_LabJobNo, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedOn, 
                    string Original_ReceivedUser) {
            if ((Original_Pit == null)) {
                throw new global::System.ArgumentNullException("Original_Pit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Pit));
            }
            if ((Original_Bench == null)) {
                throw new global::System.ArgumentNullException("Original_Bench");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Bench));
            }
            if ((Original_ShotNo == null)) {
                throw new global::System.ArgumentNullException("Original_ShotNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ShotNo));
            }
            if ((Original_HoleNo == null)) {
                throw new global::System.ArgumentNullException("Original_HoleNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_HoleNo));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_PlanEasting));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_PlanNorthing));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_PlanElevation));
            if ((Original_ActualEasting.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_ActualEasting.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualNorthing.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_ActualNorthing.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualElevation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_ActualElevation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_InterceptDepth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_InterceptDepth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Bearing.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Bearing.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Inclination.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_Inclination.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_MaterialType == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MaterialType));
            }
            if ((Original_Fe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((float)(Original_Fe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_SiO2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((float)(Original_SiO2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Al2O3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((float)(Original_Al2O3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_P.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((float)(Original_P.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_S.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((float)(Original_S.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Mn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((float)(Original_Mn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_LOI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((float)(Original_LOI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Gangue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((float)(Original_Gangue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_LogMatType == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_LogMatType));
            }
            if ((Original_LogOtherMatType == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_LogOtherMatType));
            }
            if ((Original_LogTopMatType == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_LogTopMatType));
            }
            if ((Original_LogBottomMatType == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_LogBottomMatType));
            }
            if ((Original_LogTopColour == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_LogTopColour));
            }
            if ((Original_LogBottomColour == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_LogBottomColour));
            }
            if ((Original_LogReference == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_LogReference));
            }
            if ((Original_LogComments == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_LogComments));
            }
            if ((Original_LoggedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_LoggedUser));
            }
            if ((Original_LoggedOn == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_LoggedOn));
            }
            if ((Original_LogValidatedOn == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_LogValidatedOn));
            }
            if ((Original_SampleId == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_SampleId));
            }
            if ((Original_Submission == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_Submission));
            }
            if ((Original_Instructions == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_Instructions));
            }
            if ((Original_DesignedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((System.DateTime)(Original_DesignedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_DesignedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_DesignedUser));
            }
            if ((Original_SelectedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((System.DateTime)(Original_SelectedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_SelectedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_SelectedUser));
            }
            if ((Original_SampledOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_SampledOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_SampledUser == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_SampledUser));
            }
            if ((Original_SubmittedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((System.DateTime)(Original_SubmittedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_SubmittedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_SubmittedUser));
            }
            if ((Original_DespatchedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((System.DateTime)(Original_DespatchedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_DespatchedUser));
            }
            if ((Original_ArrivedForPreparation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((System.DateTime)(Original_ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForPreparationUser == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_ArrivedForPreparationUser));
            }
            if ((Original_DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((System.DateTime)(Original_DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedFromPreparationUser == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_DespatchedFromPreparationUser));
            }
            if ((Original_ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((System.DateTime)(Original_ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForAnalysisUser == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_ArrivedForAnalysisUser));
            }
            if ((Original_LabJobNo == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_LabJobNo));
            }
            if ((Original_ReceivedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((System.DateTime)(Original_ReceivedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_ReceivedUser));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Pit, 
                    string Bench, 
                    string ShotNo, 
                    string HoleNo, 
                    double PlanEasting, 
                    double PlanNorthing, 
                    double PlanElevation, 
                    global::System.Nullable<double> ActualEasting, 
                    global::System.Nullable<double> ActualNorthing, 
                    global::System.Nullable<double> ActualElevation, 
                    global::System.Nullable<double> InterceptDepth, 
                    global::System.Nullable<double> Bearing, 
                    global::System.Nullable<double> Inclination, 
                    string MaterialType, 
                    global::System.Nullable<float> Fe, 
                    global::System.Nullable<float> SiO2, 
                    global::System.Nullable<float> Al2O3, 
                    global::System.Nullable<float> P, 
                    global::System.Nullable<float> S, 
                    global::System.Nullable<float> Mn, 
                    global::System.Nullable<float> LOI, 
                    global::System.Nullable<float> Gangue, 
                    string LogMatType, 
                    string LogOtherMatType, 
                    string LogTopMatType, 
                    string LogBottomMatType, 
                    string LogTopColour, 
                    string LogBottomColour, 
                    string LogReference, 
                    string LogComments, 
                    string LoggedUser, 
                    string LoggedOn, 
                    string LogValidatedOn, 
                    string SampleId, 
                    string Submission, 
                    string Instructions, 
                    global::System.Nullable<global::System.DateTime> DesignedOn, 
                    string DesignedUser, 
                    global::System.Nullable<global::System.DateTime> SelectedOn, 
                    string SelectedUser, 
                    global::System.Nullable<global::System.DateTime> SampledOn, 
                    string SampledUser, 
                    global::System.Nullable<global::System.DateTime> SubmittedOn, 
                    string SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedOn, 
                    string DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForPreparation, 
                    string ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedFromPreparationOn, 
                    string DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForAnalysis, 
                    string ArrivedForAnalysisUser, 
                    string LabJobNo, 
                    global::System.Nullable<global::System.DateTime> ReceivedOn, 
                    string ReceivedUser) {
            if ((Pit == null)) {
                throw new global::System.ArgumentNullException("Pit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Pit));
            }
            if ((Bench == null)) {
                throw new global::System.ArgumentNullException("Bench");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Bench));
            }
            if ((ShotNo == null)) {
                throw new global::System.ArgumentNullException("ShotNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ShotNo));
            }
            if ((HoleNo == null)) {
                throw new global::System.ArgumentNullException("HoleNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(HoleNo));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(PlanEasting));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(PlanNorthing));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(PlanElevation));
            if ((ActualEasting.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ActualEasting.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ActualNorthing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(ActualNorthing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ActualElevation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(ActualElevation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((InterceptDepth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(InterceptDepth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Bearing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Bearing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Inclination.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Inclination.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MaterialType == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MaterialType));
            }
            if ((Fe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((float)(Fe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SiO2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((float)(SiO2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Al2O3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((float)(Al2O3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((P.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((float)(P.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((S.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((float)(S.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Mn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((float)(Mn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LOI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((float)(LOI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Gangue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((float)(Gangue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LogMatType == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(LogMatType));
            }
            if ((LogOtherMatType == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(LogOtherMatType));
            }
            if ((LogTopMatType == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(LogTopMatType));
            }
            if ((LogBottomMatType == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(LogBottomMatType));
            }
            if ((LogTopColour == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(LogTopColour));
            }
            if ((LogBottomColour == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(LogBottomColour));
            }
            if ((LogReference == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(LogReference));
            }
            if ((LogComments == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(LogComments));
            }
            if ((LoggedUser == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(LoggedUser));
            }
            if ((LoggedOn == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(LoggedOn));
            }
            if ((LogValidatedOn == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(LogValidatedOn));
            }
            if ((SampleId == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(SampleId));
            }
            if ((Submission == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Submission));
            }
            if ((Instructions == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Instructions));
            }
            if ((DesignedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(DesignedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DesignedUser == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(DesignedUser));
            }
            if ((SelectedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(SelectedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((SelectedUser == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(SelectedUser));
            }
            if ((SampledOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(SampledOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((SampledUser == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(SampledUser));
            }
            if ((SubmittedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(SubmittedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((SubmittedUser == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(SubmittedUser));
            }
            if ((DespatchedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(DespatchedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((DespatchedUser == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(DespatchedUser));
            }
            if ((ArrivedForPreparation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((System.DateTime)(ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForPreparationUser == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(ArrivedForPreparationUser));
            }
            if ((DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((System.DateTime)(DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((DespatchedFromPreparationUser == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(DespatchedFromPreparationUser));
            }
            if ((ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((System.DateTime)(ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForAnalysisUser == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(ArrivedForAnalysisUser));
            }
            if ((LabJobNo == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(LabJobNo));
            }
            if ((ReceivedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(ReceivedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((ReceivedUser == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(ReceivedUser));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Pit, 
                    string Bench, 
                    string ShotNo, 
                    string HoleNo, 
                    double PlanEasting, 
                    double PlanNorthing, 
                    double PlanElevation, 
                    global::System.Nullable<double> ActualEasting, 
                    global::System.Nullable<double> ActualNorthing, 
                    global::System.Nullable<double> ActualElevation, 
                    global::System.Nullable<double> InterceptDepth, 
                    global::System.Nullable<double> Bearing, 
                    global::System.Nullable<double> Inclination, 
                    string MaterialType, 
                    global::System.Nullable<float> Fe, 
                    global::System.Nullable<float> SiO2, 
                    global::System.Nullable<float> Al2O3, 
                    global::System.Nullable<float> P, 
                    global::System.Nullable<float> S, 
                    global::System.Nullable<float> Mn, 
                    global::System.Nullable<float> LOI, 
                    global::System.Nullable<float> Gangue, 
                    string LogMatType, 
                    string LogOtherMatType, 
                    string LogTopMatType, 
                    string LogBottomMatType, 
                    string LogTopColour, 
                    string LogBottomColour, 
                    string LogReference, 
                    string LogComments, 
                    string LoggedUser, 
                    string LoggedOn, 
                    string LogValidatedOn, 
                    string SampleId, 
                    string Submission, 
                    string Instructions, 
                    global::System.Nullable<global::System.DateTime> DesignedOn, 
                    string DesignedUser, 
                    global::System.Nullable<global::System.DateTime> SelectedOn, 
                    string SelectedUser, 
                    global::System.Nullable<global::System.DateTime> SampledOn, 
                    string SampledUser, 
                    global::System.Nullable<global::System.DateTime> SubmittedOn, 
                    string SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedOn, 
                    string DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForPreparation, 
                    string ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedFromPreparationOn, 
                    string DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForAnalysis, 
                    string ArrivedForAnalysisUser, 
                    string LabJobNo, 
                    global::System.Nullable<global::System.DateTime> ReceivedOn, 
                    string ReceivedUser, 
                    string Original_Pit, 
                    string Original_Bench, 
                    string Original_ShotNo, 
                    string Original_HoleNo, 
                    double Original_PlanEasting, 
                    double Original_PlanNorthing, 
                    double Original_PlanElevation, 
                    global::System.Nullable<double> Original_ActualEasting, 
                    global::System.Nullable<double> Original_ActualNorthing, 
                    global::System.Nullable<double> Original_ActualElevation, 
                    global::System.Nullable<double> Original_InterceptDepth, 
                    global::System.Nullable<double> Original_Bearing, 
                    global::System.Nullable<double> Original_Inclination, 
                    string Original_MaterialType, 
                    global::System.Nullable<float> Original_Fe, 
                    global::System.Nullable<float> Original_SiO2, 
                    global::System.Nullable<float> Original_Al2O3, 
                    global::System.Nullable<float> Original_P, 
                    global::System.Nullable<float> Original_S, 
                    global::System.Nullable<float> Original_Mn, 
                    global::System.Nullable<float> Original_LOI, 
                    global::System.Nullable<float> Original_Gangue, 
                    string Original_LogMatType, 
                    string Original_LogOtherMatType, 
                    string Original_LogTopMatType, 
                    string Original_LogBottomMatType, 
                    string Original_LogTopColour, 
                    string Original_LogBottomColour, 
                    string Original_LogReference, 
                    string Original_LogComments, 
                    string Original_LoggedUser, 
                    string Original_LoggedOn, 
                    string Original_LogValidatedOn, 
                    string Original_SampleId, 
                    string Original_Submission, 
                    string Original_Instructions, 
                    global::System.Nullable<global::System.DateTime> Original_DesignedOn, 
                    string Original_DesignedUser, 
                    global::System.Nullable<global::System.DateTime> Original_SelectedOn, 
                    string Original_SelectedUser, 
                    global::System.Nullable<global::System.DateTime> Original_SampledOn, 
                    string Original_SampledUser, 
                    global::System.Nullable<global::System.DateTime> Original_SubmittedOn, 
                    string Original_SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedOn, 
                    string Original_DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForPreparation, 
                    string Original_ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedFromPreparationOn, 
                    string Original_DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForAnalysis, 
                    string Original_ArrivedForAnalysisUser, 
                    string Original_LabJobNo, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedOn, 
                    string Original_ReceivedUser) {
            if ((Pit == null)) {
                throw new global::System.ArgumentNullException("Pit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Pit));
            }
            if ((Bench == null)) {
                throw new global::System.ArgumentNullException("Bench");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Bench));
            }
            if ((ShotNo == null)) {
                throw new global::System.ArgumentNullException("ShotNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ShotNo));
            }
            if ((HoleNo == null)) {
                throw new global::System.ArgumentNullException("HoleNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(HoleNo));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(PlanEasting));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(PlanNorthing));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(PlanElevation));
            if ((ActualEasting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(ActualEasting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ActualNorthing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(ActualNorthing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ActualElevation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(ActualElevation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((InterceptDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(InterceptDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Bearing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Bearing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Inclination.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Inclination.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MaterialType == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MaterialType));
            }
            if ((Fe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((float)(Fe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SiO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(SiO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Al2O3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(Al2O3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((P.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((float)(P.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((float)(S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Mn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((float)(Mn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LOI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((float)(LOI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Gangue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((float)(Gangue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LogMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(LogMatType));
            }
            if ((LogOtherMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(LogOtherMatType));
            }
            if ((LogTopMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(LogTopMatType));
            }
            if ((LogBottomMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(LogBottomMatType));
            }
            if ((LogTopColour == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(LogTopColour));
            }
            if ((LogBottomColour == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(LogBottomColour));
            }
            if ((LogReference == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(LogReference));
            }
            if ((LogComments == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(LogComments));
            }
            if ((LoggedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(LoggedUser));
            }
            if ((LoggedOn == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(LoggedOn));
            }
            if ((LogValidatedOn == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(LogValidatedOn));
            }
            if ((SampleId == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(SampleId));
            }
            if ((Submission == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Submission));
            }
            if ((Instructions == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Instructions));
            }
            if ((DesignedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(DesignedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DesignedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(DesignedUser));
            }
            if ((SelectedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(SelectedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((SelectedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(SelectedUser));
            }
            if ((SampledOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(SampledOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((SampledUser == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(SampledUser));
            }
            if ((SubmittedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(SubmittedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((SubmittedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(SubmittedUser));
            }
            if ((DespatchedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(DespatchedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((DespatchedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(DespatchedUser));
            }
            if ((ArrivedForPreparation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(ArrivedForPreparationUser));
            }
            if ((DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((DespatchedFromPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(DespatchedFromPreparationUser));
            }
            if ((ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForAnalysisUser == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(ArrivedForAnalysisUser));
            }
            if ((LabJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(LabJobNo));
            }
            if ((ReceivedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(ReceivedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((ReceivedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(ReceivedUser));
            }
            if ((Original_Pit == null)) {
                throw new global::System.ArgumentNullException("Original_Pit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Pit));
            }
            if ((Original_Bench == null)) {
                throw new global::System.ArgumentNullException("Original_Bench");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Bench));
            }
            if ((Original_ShotNo == null)) {
                throw new global::System.ArgumentNullException("Original_ShotNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_ShotNo));
            }
            if ((Original_HoleNo == null)) {
                throw new global::System.ArgumentNullException("Original_HoleNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_HoleNo));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(Original_PlanEasting));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_PlanNorthing));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(Original_PlanElevation));
            if ((Original_ActualEasting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(Original_ActualEasting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualNorthing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(Original_ActualNorthing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualElevation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(Original_ActualElevation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_InterceptDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((double)(Original_InterceptDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_Bearing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(Original_Bearing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_Inclination.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(Original_Inclination.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_MaterialType == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_MaterialType));
            }
            if ((Original_Fe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((float)(Original_Fe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_SiO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((float)(Original_SiO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_Al2O3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((float)(Original_Al2O3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_P.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((float)(Original_P.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((float)(Original_S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_Mn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((float)(Original_Mn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_LOI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((float)(Original_LOI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_Gangue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((float)(Original_Gangue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_LogMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_LogMatType));
            }
            if ((Original_LogOtherMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_LogOtherMatType));
            }
            if ((Original_LogTopMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_LogTopMatType));
            }
            if ((Original_LogBottomMatType == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_LogBottomMatType));
            }
            if ((Original_LogTopColour == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_LogTopColour));
            }
            if ((Original_LogBottomColour == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_LogBottomColour));
            }
            if ((Original_LogReference == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_LogReference));
            }
            if ((Original_LogComments == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_LogComments));
            }
            if ((Original_LoggedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_LoggedUser));
            }
            if ((Original_LoggedOn == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_LoggedOn));
            }
            if ((Original_LogValidatedOn == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_LogValidatedOn));
            }
            if ((Original_SampleId == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_SampleId));
            }
            if ((Original_Submission == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_Submission));
            }
            if ((Original_Instructions == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_Instructions));
            }
            if ((Original_DesignedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((System.DateTime)(Original_DesignedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_DesignedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_DesignedUser));
            }
            if ((Original_SelectedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((System.DateTime)(Original_SelectedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_SelectedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_SelectedUser));
            }
            if ((Original_SampledOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((System.DateTime)(Original_SampledOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_SampledUser == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_SampledUser));
            }
            if ((Original_SubmittedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((System.DateTime)(Original_SubmittedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_SubmittedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_SubmittedUser));
            }
            if ((Original_DespatchedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((System.DateTime)(Original_DespatchedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_DespatchedUser));
            }
            if ((Original_ArrivedForPreparation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((System.DateTime)(Original_ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_ArrivedForPreparationUser));
            }
            if ((Original_DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((System.DateTime)(Original_DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedFromPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_DespatchedFromPreparationUser));
            }
            if ((Original_ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((System.DateTime)(Original_ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForAnalysisUser == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_ArrivedForAnalysisUser));
            }
            if ((Original_LabJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_LabJobNo));
            }
            if ((Original_ReceivedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((System.DateTime)(Original_ReceivedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_ReceivedUser));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    double PlanEasting, 
                    double PlanNorthing, 
                    double PlanElevation, 
                    global::System.Nullable<double> ActualEasting, 
                    global::System.Nullable<double> ActualNorthing, 
                    global::System.Nullable<double> ActualElevation, 
                    global::System.Nullable<double> InterceptDepth, 
                    global::System.Nullable<double> Bearing, 
                    global::System.Nullable<double> Inclination, 
                    string MaterialType, 
                    global::System.Nullable<float> Fe, 
                    global::System.Nullable<float> SiO2, 
                    global::System.Nullable<float> Al2O3, 
                    global::System.Nullable<float> P, 
                    global::System.Nullable<float> S, 
                    global::System.Nullable<float> Mn, 
                    global::System.Nullable<float> LOI, 
                    global::System.Nullable<float> Gangue, 
                    string LogMatType, 
                    string LogOtherMatType, 
                    string LogTopMatType, 
                    string LogBottomMatType, 
                    string LogTopColour, 
                    string LogBottomColour, 
                    string LogReference, 
                    string LogComments, 
                    string LoggedUser, 
                    string LoggedOn, 
                    string LogValidatedOn, 
                    string SampleId, 
                    string Submission, 
                    string Instructions, 
                    global::System.Nullable<global::System.DateTime> DesignedOn, 
                    string DesignedUser, 
                    global::System.Nullable<global::System.DateTime> SelectedOn, 
                    string SelectedUser, 
                    global::System.Nullable<global::System.DateTime> SampledOn, 
                    string SampledUser, 
                    global::System.Nullable<global::System.DateTime> SubmittedOn, 
                    string SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedOn, 
                    string DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForPreparation, 
                    string ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedFromPreparationOn, 
                    string DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForAnalysis, 
                    string ArrivedForAnalysisUser, 
                    string LabJobNo, 
                    global::System.Nullable<global::System.DateTime> ReceivedOn, 
                    string ReceivedUser, 
                    string Original_Pit, 
                    string Original_Bench, 
                    string Original_ShotNo, 
                    string Original_HoleNo, 
                    double Original_PlanEasting, 
                    double Original_PlanNorthing, 
                    double Original_PlanElevation, 
                    global::System.Nullable<double> Original_ActualEasting, 
                    global::System.Nullable<double> Original_ActualNorthing, 
                    global::System.Nullable<double> Original_ActualElevation, 
                    global::System.Nullable<double> Original_InterceptDepth, 
                    global::System.Nullable<double> Original_Bearing, 
                    global::System.Nullable<double> Original_Inclination, 
                    string Original_MaterialType, 
                    global::System.Nullable<float> Original_Fe, 
                    global::System.Nullable<float> Original_SiO2, 
                    global::System.Nullable<float> Original_Al2O3, 
                    global::System.Nullable<float> Original_P, 
                    global::System.Nullable<float> Original_S, 
                    global::System.Nullable<float> Original_Mn, 
                    global::System.Nullable<float> Original_LOI, 
                    global::System.Nullable<float> Original_Gangue, 
                    string Original_LogMatType, 
                    string Original_LogOtherMatType, 
                    string Original_LogTopMatType, 
                    string Original_LogBottomMatType, 
                    string Original_LogTopColour, 
                    string Original_LogBottomColour, 
                    string Original_LogReference, 
                    string Original_LogComments, 
                    string Original_LoggedUser, 
                    string Original_LoggedOn, 
                    string Original_LogValidatedOn, 
                    string Original_SampleId, 
                    string Original_Submission, 
                    string Original_Instructions, 
                    global::System.Nullable<global::System.DateTime> Original_DesignedOn, 
                    string Original_DesignedUser, 
                    global::System.Nullable<global::System.DateTime> Original_SelectedOn, 
                    string Original_SelectedUser, 
                    global::System.Nullable<global::System.DateTime> Original_SampledOn, 
                    string Original_SampledUser, 
                    global::System.Nullable<global::System.DateTime> Original_SubmittedOn, 
                    string Original_SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedOn, 
                    string Original_DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForPreparation, 
                    string Original_ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedFromPreparationOn, 
                    string Original_DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForAnalysis, 
                    string Original_ArrivedForAnalysisUser, 
                    string Original_LabJobNo, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedOn, 
                    string Original_ReceivedUser) {
            return this.Update(Original_Pit, Original_Bench, Original_ShotNo, Original_HoleNo, PlanEasting, PlanNorthing, PlanElevation, ActualEasting, ActualNorthing, ActualElevation, InterceptDepth, Bearing, Inclination, MaterialType, Fe, SiO2, Al2O3, P, S, Mn, LOI, Gangue, LogMatType, LogOtherMatType, LogTopMatType, LogBottomMatType, LogTopColour, LogBottomColour, LogReference, LogComments, LoggedUser, LoggedOn, LogValidatedOn, SampleId, Submission, Instructions, DesignedOn, DesignedUser, SelectedOn, SelectedUser, SampledOn, SampledUser, SubmittedOn, SubmittedUser, DespatchedOn, DespatchedUser, ArrivedForPreparation, ArrivedForPreparationUser, DespatchedFromPreparationOn, DespatchedFromPreparationUser, ArrivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, ReceivedOn, ReceivedUser, Original_Pit, Original_Bench, Original_ShotNo, Original_HoleNo, Original_PlanEasting, Original_PlanNorthing, Original_PlanElevation, Original_ActualEasting, Original_ActualNorthing, Original_ActualElevation, Original_InterceptDepth, Original_Bearing, Original_Inclination, Original_MaterialType, Original_Fe, Original_SiO2, Original_Al2O3, Original_P, Original_S, Original_Mn, Original_LOI, Original_Gangue, Original_LogMatType, Original_LogOtherMatType, Original_LogTopMatType, Original_LogBottomMatType, Original_LogTopColour, Original_LogBottomColour, Original_LogReference, Original_LogComments, Original_LoggedUser, Original_LoggedOn, Original_LogValidatedOn, Original_SampleId, Original_Submission, Original_Instructions, Original_DesignedOn, Original_DesignedUser, Original_SelectedOn, Original_SelectedUser, Original_SampledOn, Original_SampledUser, Original_SubmittedOn, Original_SubmittedUser, Original_DespatchedOn, Original_DespatchedUser, Original_ArrivedForPreparation, Original_ArrivedForPreparationUser, Original_DespatchedFromPreparationOn, Original_DespatchedFromPreparationUser, Original_ArrivedForAnalysis, Original_ArrivedForAnalysisUser, Original_LabJobNo, Original_ReceivedOn, Original_ReceivedUser);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class psm_Product_SamplesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public psm_Product_SamplesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "psm_Product_Samples";
            tableMapping.ColumnMappings.Add("Crusher", "Crusher");
            tableMapping.ColumnMappings.Add("SampledOn", "SampledOn");
            tableMapping.ColumnMappings.Add("SampledUser", "SampledUser");
            tableMapping.ColumnMappings.Add("Shift", "Shift");
            tableMapping.ColumnMappings.Add("SampleId", "SampleId");
            tableMapping.ColumnMappings.Add("Weightometer", "Weightometer");
            tableMapping.ColumnMappings.Add("SampleBucket", "SampleBucket");
            tableMapping.ColumnMappings.Add("StackerPosition", "StackerPosition");
            tableMapping.ColumnMappings.Add("PrimaryFrom", "PrimaryFrom");
            tableMapping.ColumnMappings.Add("PrimaryScoops", "PrimaryScoops");
            tableMapping.ColumnMappings.Add("SecondaryFrom", "SecondaryFrom");
            tableMapping.ColumnMappings.Add("SecondaryScoops", "SecondaryScoops");
            tableMapping.ColumnMappings.Add("To", "To");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("Submission", "Submission");
            tableMapping.ColumnMappings.Add("Instructions", "Instructions");
            tableMapping.ColumnMappings.Add("Fe", "Fe");
            tableMapping.ColumnMappings.Add("SiO2", "SiO2");
            tableMapping.ColumnMappings.Add("Al2O3", "Al2O3");
            tableMapping.ColumnMappings.Add("P", "P");
            tableMapping.ColumnMappings.Add("S", "S");
            tableMapping.ColumnMappings.Add("Mn", "Mn");
            tableMapping.ColumnMappings.Add("LOI", "LOI");
            tableMapping.ColumnMappings.Add("TotalMass", "TotalMass");
            tableMapping.ColumnMappings.Add("Size12.5mm", "Size12_5mm");
            tableMapping.ColumnMappings.Add("Size10.0_12.5mm", "Size10_0_12_5mm");
            tableMapping.ColumnMappings.Add("Size9.5_10.0mm", "Size9_5_10_0mm");
            tableMapping.ColumnMappings.Add("Size6.7_9.5mm", "Size6_7_9_5mm");
            tableMapping.ColumnMappings.Add("Size0.5_6.7mm", "Size0_5_6_7mm");
            tableMapping.ColumnMappings.Add("Size0.0_0.5mm", "Size0_0_0_5mm");
            tableMapping.ColumnMappings.Add("Moisture", "Moisture");
            tableMapping.ColumnMappings.Add("SubmittedOn", "SubmittedOn");
            tableMapping.ColumnMappings.Add("SubmittedUser", "SubmittedUser");
            tableMapping.ColumnMappings.Add("DespatchedOn", "DespatchedOn");
            tableMapping.ColumnMappings.Add("DespatchedUser", "DespatchedUser");
            tableMapping.ColumnMappings.Add("ArrivedForPreparation", "ArrivedForPreparation");
            tableMapping.ColumnMappings.Add("ArrivedForPreparationUser", "ArrivedForPreparationUser");
            tableMapping.ColumnMappings.Add("DespatchedFromPreparationOn", "DespatchedFromPreparationOn");
            tableMapping.ColumnMappings.Add("DespatchedFromPreparationUser", "DespatchedFromPreparationUser");
            tableMapping.ColumnMappings.Add("ArrivedForAnalysis", "ArrivedForAnalysis");
            tableMapping.ColumnMappings.Add("ArrivedForAnalysisUser", "ArrivedForAnalysisUser");
            tableMapping.ColumnMappings.Add("LabJobNo", "LabJobNo");
            tableMapping.ColumnMappings.Add("ReceivedOn", "ReceivedOn");
            tableMapping.ColumnMappings.Add("ReceivedUser", "ReceivedUser");
            tableMapping.ColumnMappings.Add("Published", "Published");
            tableMapping.ColumnMappings.Add("Action", "Action");
            tableMapping.ColumnMappings.Add("Finger3From", "Finger3From");
            tableMapping.ColumnMappings.Add("Finger3Scoops", "Finger3Scoops");
            tableMapping.ColumnMappings.Add("Finger4From", "Finger4From");
            tableMapping.ColumnMappings.Add("Finger4Scoops", "Finger4Scoops");
            tableMapping.ColumnMappings.Add("Finger5From", "Finger5From");
            tableMapping.ColumnMappings.Add("Finger5Scoops", "Finger5Scoops");
            tableMapping.ColumnMappings.Add("Finger6From", "Finger6From");
            tableMapping.ColumnMappings.Add("Finger6Scoops", "Finger6Scoops");
            tableMapping.ColumnMappings.Add("Size40mm", "Size40mm");
            tableMapping.ColumnMappings.Add("Size6.3_40mm", "Size6_3_40mm");
            tableMapping.ColumnMappings.Add("Size0.0_6.3mm", "Size0_0_6_3mm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[psm_Product_Samples] WHERE (((@IsNull_Crusher = 1 AND [Crusher" +
                "] IS NULL) OR ([Crusher] = @Original_Crusher)) AND ((@IsNull_SampledOn = 1 AND [" +
                "SampledOn] IS NULL) OR ([SampledOn] = @Original_SampledOn)) AND ((@IsNull_Sample" +
                "dUser = 1 AND [SampledUser] IS NULL) OR ([SampledUser] = @Original_SampledUser))" +
                " AND ((@IsNull_Shift = 1 AND [Shift] IS NULL) OR ([Shift] = @Original_Shift)) AN" +
                "D ([SampleId] = @Original_SampleId) AND ((@IsNull_Weightometer = 1 AND [Weightom" +
                "eter] IS NULL) OR ([Weightometer] = @Original_Weightometer)) AND ((@IsNull_Sampl" +
                "eBucket = 1 AND [SampleBucket] IS NULL) OR ([SampleBucket] = @Original_SampleBuc" +
                "ket)) AND ((@IsNull_StackerPosition = 1 AND [StackerPosition] IS NULL) OR ([Stac" +
                "kerPosition] = @Original_StackerPosition)) AND ((@IsNull_PrimaryFrom = 1 AND [Pr" +
                "imaryFrom] IS NULL) OR ([PrimaryFrom] = @Original_PrimaryFrom)) AND ((@IsNull_Pr" +
                "imaryScoops = 1 AND [PrimaryScoops] IS NULL) OR ([PrimaryScoops] = @Original_Pri" +
                "maryScoops)) AND ((@IsNull_SecondaryFrom = 1 AND [SecondaryFrom] IS NULL) OR ([S" +
                "econdaryFrom] = @Original_SecondaryFrom)) AND ((@IsNull_SecondaryScoops = 1 AND " +
                "[SecondaryScoops] IS NULL) OR ([SecondaryScoops] = @Original_SecondaryScoops)) A" +
                "ND ((@IsNull_To = 1 AND [To] IS NULL) OR ([To] = @Original_To)) AND ((@IsNull_Co" +
                "mments = 1 AND [Comments] IS NULL) OR ([Comments] = @Original_Comments)) AND ((@" +
                "IsNull_Submission = 1 AND [Submission] IS NULL) OR ([Submission] = @Original_Sub" +
                "mission)) AND ((@IsNull_Instructions = 1 AND [Instructions] IS NULL) OR ([Instru" +
                "ctions] = @Original_Instructions)) AND ((@IsNull_Fe = 1 AND [Fe] IS NULL) OR ([F" +
                "e] = @Original_Fe)) AND ((@IsNull_SiO2 = 1 AND [SiO2] IS NULL) OR ([SiO2] = @Ori" +
                "ginal_SiO2)) AND ((@IsNull_Al2O3 = 1 AND [Al2O3] IS NULL) OR ([Al2O3] = @Origina" +
                "l_Al2O3)) AND ((@IsNull_P = 1 AND [P] IS NULL) OR ([P] = @Original_P)) AND ((@Is" +
                "Null_S = 1 AND [S] IS NULL) OR ([S] = @Original_S)) AND ((@IsNull_Mn = 1 AND [Mn" +
                "] IS NULL) OR ([Mn] = @Original_Mn)) AND ((@IsNull_LOI = 1 AND [LOI] IS NULL) OR" +
                " ([LOI] = @Original_LOI)) AND ((@IsNull_TotalMass = 1 AND [TotalMass] IS NULL) O" +
                "R ([TotalMass] = @Original_TotalMass)) AND ((@p3 = 1 AND [Size12.5mm] IS NULL) O" +
                "R ([Size12.5mm] = @p2)) AND ((@p6 = 1 AND [Size10.0_12.5mm] IS NULL) OR ([Size10" +
                ".0_12.5mm] = @p5)) AND ((@p9 = 1 AND [Size9.5_10.0mm] IS NULL) OR ([Size9.5_10.0" +
                "mm] = @p8)) AND ((@p12 = 1 AND [Size6.7_9.5mm] IS NULL) OR ([Size6.7_9.5mm] = @p" +
                "11)) AND ((@p15 = 1 AND [Size0.5_6.7mm] IS NULL) OR ([Size0.5_6.7mm] = @p14)) AN" +
                "D ((@p18 = 1 AND [Size0.0_0.5mm] IS NULL) OR ([Size0.0_0.5mm] = @p17)) AND ((@Is" +
                "Null_Moisture = 1 AND [Moisture] IS NULL) OR ([Moisture] = @Original_Moisture)) " +
                "AND ((@IsNull_SubmittedOn = 1 AND [SubmittedOn] IS NULL) OR ([SubmittedOn] = @Or" +
                "iginal_SubmittedOn)) AND ((@IsNull_SubmittedUser = 1 AND [SubmittedUser] IS NULL" +
                ") OR ([SubmittedUser] = @Original_SubmittedUser)) AND ((@IsNull_DespatchedOn = 1" +
                " AND [DespatchedOn] IS NULL) OR ([DespatchedOn] = @Original_DespatchedOn)) AND (" +
                "(@IsNull_DespatchedUser = 1 AND [DespatchedUser] IS NULL) OR ([DespatchedUser] =" +
                " @Original_DespatchedUser)) AND ((@IsNull_ArrivedForPreparation = 1 AND [Arrived" +
                "ForPreparation] IS NULL) OR ([ArrivedForPreparation] = @Original_ArrivedForPrepa" +
                "ration)) AND ((@IsNull_ArrivedForPreparationUser = 1 AND [ArrivedForPreparationU" +
                "ser] IS NULL) OR ([ArrivedForPreparationUser] = @Original_ArrivedForPreparationU" +
                "ser)) AND ((@IsNull_DespatchedFromPreparationOn = 1 AND [DespatchedFromPreparati" +
                "onOn] IS NULL) OR ([DespatchedFromPreparationOn] = @Original_DespatchedFromPrepa" +
                "rationOn)) AND ((@IsNull_DespatchedFromPreparationUser = 1 AND [DespatchedFromPr" +
                "eparationUser] IS NULL) OR ([DespatchedFromPreparationUser] = @Original_Despatch" +
                "edFromPreparationUser)) AND ((@IsNull_ArrivedForAnalysis = 1 AND [ArrivedForAnal" +
                "ysis] IS NULL) OR ([ArrivedForAnalysis] = @Original_ArrivedForAnalysis)) AND ((@" +
                "IsNull_ArrivedForAnalysisUser = 1 AND [ArrivedForAnalysisUser] IS NULL) OR ([Arr" +
                "ivedForAnalysisUser] = @Original_ArrivedForAnalysisUser)) AND ((@IsNull_LabJobNo" +
                " = 1 AND [LabJobNo] IS NULL) OR ([LabJobNo] = @Original_LabJobNo)) AND ((@IsNull" +
                "_ReceivedOn = 1 AND [ReceivedOn] IS NULL) OR ([ReceivedOn] = @Original_ReceivedO" +
                "n)) AND ((@IsNull_ReceivedUser = 1 AND [ReceivedUser] IS NULL) OR ([ReceivedUser" +
                "] = @Original_ReceivedUser)) AND ((@IsNull_Published = 1 AND [Published] IS NULL" +
                ") OR ([Published] = @Original_Published)) AND ((@IsNull_Action = 1 AND [Action] " +
                "IS NULL) OR ([Action] = @Original_Action)) AND ((@IsNull_Finger3From = 1 AND [Fi" +
                "nger3From] IS NULL) OR ([Finger3From] = @Original_Finger3From)) AND ((@IsNull_Fi" +
                "nger3Scoops = 1 AND [Finger3Scoops] IS NULL) OR ([Finger3Scoops] = @Original_Fin" +
                "ger3Scoops)) AND ((@IsNull_Finger4From = 1 AND [Finger4From] IS NULL) OR ([Finge" +
                "r4From] = @Original_Finger4From)) AND ((@IsNull_Finger4Scoops = 1 AND [Finger4Sc" +
                "oops] IS NULL) OR ([Finger4Scoops] = @Original_Finger4Scoops)) AND ((@IsNull_Fin" +
                "ger5From = 1 AND [Finger5From] IS NULL) OR ([Finger5From] = @Original_Finger5Fro" +
                "m)) AND ((@IsNull_Finger5Scoops = 1 AND [Finger5Scoops] IS NULL) OR ([Finger5Sco" +
                "ops] = @Original_Finger5Scoops)) AND ((@IsNull_Finger6From = 1 AND [Finger6From]" +
                " IS NULL) OR ([Finger6From] = @Original_Finger6From)) AND ((@IsNull_Finger6Scoop" +
                "s = 1 AND [Finger6Scoops] IS NULL) OR ([Finger6Scoops] = @Original_Finger6Scoops" +
                ")) AND ((@IsNull_Size40mm = 1 AND [Size40mm] IS NULL) OR ([Size40mm] = @Original" +
                "_Size40mm)) AND ((@p21 = 1 AND [Size6.3_40mm] IS NULL) OR ([Size6.3_40mm] = @p20" +
                ")) AND ((@p24 = 1 AND [Size0.0_6.3mm] IS NULL) OR ([Size0.0_6.3mm] = @p23)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crusher", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crusher", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crusher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crusher", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shift", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Weightometer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weightometer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weightometer", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weightometer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleBucket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleBucket", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleBucket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleBucket", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StackerPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StackerPosition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StackerPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StackerPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrimaryFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrimaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrimaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryScoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrimaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryScoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondaryFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryScoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryScoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_To", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "To", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_To", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "To", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Submission", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Instructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SiO2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Al2O3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LOI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalMass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalMass", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size12.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size12.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size10.0_12.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size10.0_12.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size9.5_10.0mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size9.5_10.0mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.7_9.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.7_9.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.5_6.7mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.5_6.7mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p18", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_0.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p17", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_0.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Moisture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moisture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Moisture", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moisture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysisUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Published", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Published", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Action", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger3From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger3From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger3Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger3Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger4From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger4From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger4Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger4Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger5From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger5From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger5Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger5Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger6From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger6From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger6Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger6Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size40mm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size40mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size40mm", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size40mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p21", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.3_40mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p20", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.3_40mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p24", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_6.3mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p23", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_6.3mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[psm_Product_Samples] ([Crusher], [SampledOn], [SampledUser], [" +
                "Shift], [SampleId], [Weightometer], [SampleBucket], [StackerPosition], [PrimaryF" +
                "rom], [PrimaryScoops], [SecondaryFrom], [SecondaryScoops], [To], [Comments], [Su" +
                "bmission], [Instructions], [Fe], [SiO2], [Al2O3], [P], [S], [Mn], [LOI], [TotalM" +
                "ass], [Size12.5mm], [Size10.0_12.5mm], [Size9.5_10.0mm], [Size6.7_9.5mm], [Size0" +
                ".5_6.7mm], [Size0.0_0.5mm], [Moisture], [SubmittedOn], [SubmittedUser], [Despatc" +
                "hedOn], [DespatchedUser], [ArrivedForPreparation], [ArrivedForPreparationUser], " +
                "[DespatchedFromPreparationOn], [DespatchedFromPreparationUser], [ArrivedForAnaly" +
                "sis], [ArrivedForAnalysisUser], [LabJobNo], [ReceivedOn], [ReceivedUser], [Publi" +
                "shed], [Action], [Finger3From], [Finger3Scoops], [Finger4From], [Finger4Scoops]," +
                " [Finger5From], [Finger5Scoops], [Finger6From], [Finger6Scoops], [Size40mm], [Si" +
                "ze6.3_40mm], [Size0.0_6.3mm]) VALUES (@Crusher, @SampledOn, @SampledUser, @Shift" +
                ", @SampleId, @Weightometer, @SampleBucket, @StackerPosition, @PrimaryFrom, @Prim" +
                "aryScoops, @SecondaryFrom, @SecondaryScoops, @To, @Comments, @Submission, @Instr" +
                "uctions, @Fe, @SiO2, @Al2O3, @P, @S, @Mn, @LOI, @TotalMass, @p1, @p4, @p7, @p10," +
                " @p13, @p16, @Moisture, @SubmittedOn, @SubmittedUser, @DespatchedOn, @Despatched" +
                "User, @ArrivedForPreparation, @ArrivedForPreparationUser, @DespatchedFromPrepara" +
                "tionOn, @DespatchedFromPreparationUser, @ArrivedForAnalysis, @ArrivedForAnalysis" +
                "User, @LabJobNo, @ReceivedOn, @ReceivedUser, @Published, @Action, @Finger3From, " +
                "@Finger3Scoops, @Finger4From, @Finger4Scoops, @Finger5From, @Finger5Scoops, @Fin" +
                "ger6From, @Finger6Scoops, @Size40mm, @p19, @p22);\r\nSELECT Crusher, SampledOn, Sa" +
                "mpledUser, Shift, SampleId, Weightometer, SampleBucket, StackerPosition, Primary" +
                "From, PrimaryScoops, SecondaryFrom, SecondaryScoops, [To], Comments, Submission," +
                " Instructions, Fe, SiO2, Al2O3, P, S, Mn, LOI, TotalMass, [Size12.5mm], [Size10." +
                "0_12.5mm], [Size9.5_10.0mm], [Size6.7_9.5mm], [Size0.5_6.7mm], [Size0.0_0.5mm], " +
                "Moisture, SubmittedOn, SubmittedUser, DespatchedOn, DespatchedUser, ArrivedForPr" +
                "eparation, ArrivedForPreparationUser, DespatchedFromPreparationOn, DespatchedFro" +
                "mPreparationUser, ArrivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, Received" +
                "On, ReceivedUser, Published, Action, Finger3From, Finger3Scoops, Finger4From, Fi" +
                "nger4Scoops, Finger5From, Finger5Scoops, Finger6From, Finger6Scoops, Size40mm, [" +
                "Size6.3_40mm], [Size0.0_6.3mm] FROM psm_Product_Samples WHERE (SampleId = @Sampl" +
                "eId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crusher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crusher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weightometer", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weightometer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleBucket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleBucket", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StackerPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StackerPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrimaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrimaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryScoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryScoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@To", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "To", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMass", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size12.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size10.0_12.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size9.5_10.0mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.7_9.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.5_6.7mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p16", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_0.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moisture", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moisture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Published", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger3From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger3Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger4From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger4Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger5From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger5Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger6From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger6Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size40mm", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size40mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p19", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.3_40mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p22", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_6.3mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[psm_Product_Samples] SET [Crusher] = @Crusher, [SampledOn] = @Sampl" +
                "edOn, [SampledUser] = @SampledUser, [Shift] = @Shift, [SampleId] = @SampleId, [W" +
                "eightometer] = @Weightometer, [SampleBucket] = @SampleBucket, [StackerPosition] " +
                "= @StackerPosition, [PrimaryFrom] = @PrimaryFrom, [PrimaryScoops] = @PrimaryScoo" +
                "ps, [SecondaryFrom] = @SecondaryFrom, [SecondaryScoops] = @SecondaryScoops, [To]" +
                " = @To, [Comments] = @Comments, [Submission] = @Submission, [Instructions] = @In" +
                "structions, [Fe] = @Fe, [SiO2] = @SiO2, [Al2O3] = @Al2O3, [P] = @P, [S] = @S, [M" +
                "n] = @Mn, [LOI] = @LOI, [TotalMass] = @TotalMass, [Size12.5mm] = @p1, [Size10.0_" +
                "12.5mm] = @p4, [Size9.5_10.0mm] = @p7, [Size6.7_9.5mm] = @p10, [Size0.5_6.7mm] =" +
                " @p13, [Size0.0_0.5mm] = @p16, [Moisture] = @Moisture, [SubmittedOn] = @Submitte" +
                "dOn, [SubmittedUser] = @SubmittedUser, [DespatchedOn] = @DespatchedOn, [Despatch" +
                "edUser] = @DespatchedUser, [ArrivedForPreparation] = @ArrivedForPreparation, [Ar" +
                "rivedForPreparationUser] = @ArrivedForPreparationUser, [DespatchedFromPreparatio" +
                "nOn] = @DespatchedFromPreparationOn, [DespatchedFromPreparationUser] = @Despatch" +
                "edFromPreparationUser, [ArrivedForAnalysis] = @ArrivedForAnalysis, [ArrivedForAn" +
                "alysisUser] = @ArrivedForAnalysisUser, [LabJobNo] = @LabJobNo, [ReceivedOn] = @R" +
                "eceivedOn, [ReceivedUser] = @ReceivedUser, [Published] = @Published, [Action] = " +
                "@Action, [Finger3From] = @Finger3From, [Finger3Scoops] = @Finger3Scoops, [Finger" +
                "4From] = @Finger4From, [Finger4Scoops] = @Finger4Scoops, [Finger5From] = @Finger" +
                "5From, [Finger5Scoops] = @Finger5Scoops, [Finger6From] = @Finger6From, [Finger6S" +
                "coops] = @Finger6Scoops, [Size40mm] = @Size40mm, [Size6.3_40mm] = @p19, [Size0.0" +
                "_6.3mm] = @p22 WHERE (((@IsNull_Crusher = 1 AND [Crusher] IS NULL) OR ([Crusher]" +
                " = @Original_Crusher)) AND ((@IsNull_SampledOn = 1 AND [SampledOn] IS NULL) OR (" +
                "[SampledOn] = @Original_SampledOn)) AND ((@IsNull_SampledUser = 1 AND [SampledUs" +
                "er] IS NULL) OR ([SampledUser] = @Original_SampledUser)) AND ((@IsNull_Shift = 1" +
                " AND [Shift] IS NULL) OR ([Shift] = @Original_Shift)) AND ([SampleId] = @Origina" +
                "l_SampleId) AND ((@IsNull_Weightometer = 1 AND [Weightometer] IS NULL) OR ([Weig" +
                "htometer] = @Original_Weightometer)) AND ((@IsNull_SampleBucket = 1 AND [SampleB" +
                "ucket] IS NULL) OR ([SampleBucket] = @Original_SampleBucket)) AND ((@IsNull_Stac" +
                "kerPosition = 1 AND [StackerPosition] IS NULL) OR ([StackerPosition] = @Original" +
                "_StackerPosition)) AND ((@IsNull_PrimaryFrom = 1 AND [PrimaryFrom] IS NULL) OR (" +
                "[PrimaryFrom] = @Original_PrimaryFrom)) AND ((@IsNull_PrimaryScoops = 1 AND [Pri" +
                "maryScoops] IS NULL) OR ([PrimaryScoops] = @Original_PrimaryScoops)) AND ((@IsNu" +
                "ll_SecondaryFrom = 1 AND [SecondaryFrom] IS NULL) OR ([SecondaryFrom] = @Origina" +
                "l_SecondaryFrom)) AND ((@IsNull_SecondaryScoops = 1 AND [SecondaryScoops] IS NUL" +
                "L) OR ([SecondaryScoops] = @Original_SecondaryScoops)) AND ((@IsNull_To = 1 AND " +
                "[To] IS NULL) OR ([To] = @Original_To)) AND ((@IsNull_Comments = 1 AND [Comments" +
                "] IS NULL) OR ([Comments] = @Original_Comments)) AND ((@IsNull_Submission = 1 AN" +
                "D [Submission] IS NULL) OR ([Submission] = @Original_Submission)) AND ((@IsNull_" +
                "Instructions = 1 AND [Instructions] IS NULL) OR ([Instructions] = @Original_Inst" +
                "ructions)) AND ((@IsNull_Fe = 1 AND [Fe] IS NULL) OR ([Fe] = @Original_Fe)) AND " +
                "((@IsNull_SiO2 = 1 AND [SiO2] IS NULL) OR ([SiO2] = @Original_SiO2)) AND ((@IsNu" +
                "ll_Al2O3 = 1 AND [Al2O3] IS NULL) OR ([Al2O3] = @Original_Al2O3)) AND ((@IsNull_" +
                "P = 1 AND [P] IS NULL) OR ([P] = @Original_P)) AND ((@IsNull_S = 1 AND [S] IS NU" +
                "LL) OR ([S] = @Original_S)) AND ((@IsNull_Mn = 1 AND [Mn] IS NULL) OR ([Mn] = @O" +
                "riginal_Mn)) AND ((@IsNull_LOI = 1 AND [LOI] IS NULL) OR ([LOI] = @Original_LOI)" +
                ") AND ((@IsNull_TotalMass = 1 AND [TotalMass] IS NULL) OR ([TotalMass] = @Origin" +
                "al_TotalMass)) AND ((@p3 = 1 AND [Size12.5mm] IS NULL) OR ([Size12.5mm] = @p2)) " +
                "AND ((@p6 = 1 AND [Size10.0_12.5mm] IS NULL) OR ([Size10.0_12.5mm] = @p5)) AND (" +
                "(@p9 = 1 AND [Size9.5_10.0mm] IS NULL) OR ([Size9.5_10.0mm] = @p8)) AND ((@p12 =" +
                " 1 AND [Size6.7_9.5mm] IS NULL) OR ([Size6.7_9.5mm] = @p11)) AND ((@p15 = 1 AND " +
                "[Size0.5_6.7mm] IS NULL) OR ([Size0.5_6.7mm] = @p14)) AND ((@p18 = 1 AND [Size0." +
                "0_0.5mm] IS NULL) OR ([Size0.0_0.5mm] = @p17)) AND ((@IsNull_Moisture = 1 AND [M" +
                "oisture] IS NULL) OR ([Moisture] = @Original_Moisture)) AND ((@IsNull_SubmittedO" +
                "n = 1 AND [SubmittedOn] IS NULL) OR ([SubmittedOn] = @Original_SubmittedOn)) AND" +
                " ((@IsNull_SubmittedUser = 1 AND [SubmittedUser] IS NULL) OR ([SubmittedUser] = " +
                "@Original_SubmittedUser)) AND ((@IsNull_DespatchedOn = 1 AND [DespatchedOn] IS N" +
                "ULL) OR ([DespatchedOn] = @Original_DespatchedOn)) AND ((@IsNull_DespatchedUser " +
                "= 1 AND [DespatchedUser] IS NULL) OR ([DespatchedUser] = @Original_DespatchedUse" +
                "r)) AND ((@IsNull_ArrivedForPreparation = 1 AND [ArrivedForPreparation] IS NULL)" +
                " OR ([ArrivedForPreparation] = @Original_ArrivedForPreparation)) AND ((@IsNull_A" +
                "rrivedForPreparationUser = 1 AND [ArrivedForPreparationUser] IS NULL) OR ([Arriv" +
                "edForPreparationUser] = @Original_ArrivedForPreparationUser)) AND ((@IsNull_Desp" +
                "atchedFromPreparationOn = 1 AND [DespatchedFromPreparationOn] IS NULL) OR ([Desp" +
                "atchedFromPreparationOn] = @Original_DespatchedFromPreparationOn)) AND ((@IsNull" +
                "_DespatchedFromPreparationUser = 1 AND [DespatchedFromPreparationUser] IS NULL) " +
                "OR ([DespatchedFromPreparationUser] = @Original_DespatchedFromPreparationUser)) " +
                "AND ((@IsNull_ArrivedForAnalysis = 1 AND [ArrivedForAnalysis] IS NULL) OR ([Arri" +
                "vedForAnalysis] = @Original_ArrivedForAnalysis)) AND ((@IsNull_ArrivedForAnalysi" +
                "sUser = 1 AND [ArrivedForAnalysisUser] IS NULL) OR ([ArrivedForAnalysisUser] = @" +
                "Original_ArrivedForAnalysisUser)) AND ((@IsNull_LabJobNo = 1 AND [LabJobNo] IS N" +
                "ULL) OR ([LabJobNo] = @Original_LabJobNo)) AND ((@IsNull_ReceivedOn = 1 AND [Rec" +
                "eivedOn] IS NULL) OR ([ReceivedOn] = @Original_ReceivedOn)) AND ((@IsNull_Receiv" +
                "edUser = 1 AND [ReceivedUser] IS NULL) OR ([ReceivedUser] = @Original_ReceivedUs" +
                "er)) AND ((@IsNull_Published = 1 AND [Published] IS NULL) OR ([Published] = @Ori" +
                "ginal_Published)) AND ((@IsNull_Action = 1 AND [Action] IS NULL) OR ([Action] = " +
                "@Original_Action)) AND ((@IsNull_Finger3From = 1 AND [Finger3From] IS NULL) OR (" +
                "[Finger3From] = @Original_Finger3From)) AND ((@IsNull_Finger3Scoops = 1 AND [Fin" +
                "ger3Scoops] IS NULL) OR ([Finger3Scoops] = @Original_Finger3Scoops)) AND ((@IsNu" +
                "ll_Finger4From = 1 AND [Finger4From] IS NULL) OR ([Finger4From] = @Original_Fing" +
                "er4From)) AND ((@IsNull_Finger4Scoops = 1 AND [Finger4Scoops] IS NULL) OR ([Fing" +
                "er4Scoops] = @Original_Finger4Scoops)) AND ((@IsNull_Finger5From = 1 AND [Finger" +
                "5From] IS NULL) OR ([Finger5From] = @Original_Finger5From)) AND ((@IsNull_Finger" +
                "5Scoops = 1 AND [Finger5Scoops] IS NULL) OR ([Finger5Scoops] = @Original_Finger5" +
                "Scoops)) AND ((@IsNull_Finger6From = 1 AND [Finger6From] IS NULL) OR ([Finger6Fr" +
                "om] = @Original_Finger6From)) AND ((@IsNull_Finger6Scoops = 1 AND [Finger6Scoops" +
                "] IS NULL) OR ([Finger6Scoops] = @Original_Finger6Scoops)) AND ((@IsNull_Size40m" +
                "m = 1 AND [Size40mm] IS NULL) OR ([Size40mm] = @Original_Size40mm)) AND ((@p21 =" +
                " 1 AND [Size6.3_40mm] IS NULL) OR ([Size6.3_40mm] = @p20)) AND ((@p24 = 1 AND [S" +
                "ize0.0_6.3mm] IS NULL) OR ([Size0.0_6.3mm] = @p23)));\r\nSELECT Crusher, SampledOn" +
                ", SampledUser, Shift, SampleId, Weightometer, SampleBucket, StackerPosition, Pri" +
                "maryFrom, PrimaryScoops, SecondaryFrom, SecondaryScoops, [To], Comments, Submiss" +
                "ion, Instructions, Fe, SiO2, Al2O3, P, S, Mn, LOI, TotalMass, [Size12.5mm], [Siz" +
                "e10.0_12.5mm], [Size9.5_10.0mm], [Size6.7_9.5mm], [Size0.5_6.7mm], [Size0.0_0.5m" +
                "m], Moisture, SubmittedOn, SubmittedUser, DespatchedOn, DespatchedUser, ArrivedF" +
                "orPreparation, ArrivedForPreparationUser, DespatchedFromPreparationOn, Despatche" +
                "dFromPreparationUser, ArrivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, Rece" +
                "ivedOn, ReceivedUser, Published, Action, Finger3From, Finger3Scoops, Finger4From" +
                ", Finger4Scoops, Finger5From, Finger5Scoops, Finger6From, Finger6Scoops, Size40m" +
                "m, [Size6.3_40mm], [Size0.0_6.3mm] FROM psm_Product_Samples WHERE (SampleId = @S" +
                "ampleId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crusher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crusher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weightometer", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weightometer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleBucket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleBucket", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StackerPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StackerPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrimaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrimaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryScoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryScoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@To", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "To", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMass", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size12.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size10.0_12.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size9.5_10.0mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.7_9.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.5_6.7mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p16", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_0.5mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moisture", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moisture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Published", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger3From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger3Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger4From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger4Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger5From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger5Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger6From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6From", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Finger6Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6Scoops", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size40mm", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size40mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p19", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.3_40mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p22", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_6.3mm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crusher", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crusher", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crusher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crusher", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampledUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampledUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampledUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shift", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Weightometer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weightometer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weightometer", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weightometer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleBucket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleBucket", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleBucket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleBucket", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StackerPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StackerPosition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StackerPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StackerPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrimaryFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrimaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrimaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryScoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrimaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimaryScoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondaryFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondaryFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryScoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondaryScoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondaryScoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_To", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "To", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_To", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "To", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Submission", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Submission", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Submission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Instructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Instructions", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fe", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SiO2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiO2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiO2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Al2O3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Al2O3", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Al2O3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mn", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LOI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOI", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalMass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalMass", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size12.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size12.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size10.0_12.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size10.0_12.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size9.5_10.0mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size9.5_10.0mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.7_9.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.7_9.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.5_6.7mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.5_6.7mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p18", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_0.5mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p17", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_0.5mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Moisture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moisture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Moisture", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moisture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubmittedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubmittedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DespatchedFromPreparationUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DespatchedFromPreparationUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchedFromPreparationUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysis", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivedForAnalysisUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivedForAnalysisUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivedForAnalysisUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabJobNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Published", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Published", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Action", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger3From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger3From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger3Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger3Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger3Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger4From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger4From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger4Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger4Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger4Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger5From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger5From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger5Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger5Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger5Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger6From", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6From", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger6From", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6From", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Finger6Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6Scoops", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Finger6Scoops", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Finger6Scoops", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size40mm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size40mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size40mm", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size40mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p21", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.3_40mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p20", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size6.3_40mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p24", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_6.3mm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p23", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size0.0_6.3mm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AtlasSampleManager.Properties.Settings.Default.AtlasGradeControlDatabase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Crusher, SampledOn, SampledUser, Shift, SampleId, Weightometer, SampleBucket, StackerPosition, PrimaryFrom, PrimaryScoops, SecondaryFrom, SecondaryScoops, [To], Comments, Submission, Instructions, Fe, SiO2, Al2O3, P, S, Mn, LOI, TotalMass, [Size12.5mm], [Size10.0_12.5mm], [Size9.5_10.0mm], [Size6.7_9.5mm], [Size0.5_6.7mm], [Size0.0_0.5mm], Moisture, SubmittedOn, SubmittedUser, DespatchedOn, DespatchedUser, ArrivedForPreparation, ArrivedForPreparationUser, DespatchedFromPreparationOn, DespatchedFromPreparationUser, ArrivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, ReceivedOn, ReceivedUser, Published, Action, Finger3From, Finger3Scoops, Finger4From, Finger4Scoops, Finger5From, Finger5Scoops, Finger6From, Finger6Scoops, Size40mm, [Size6.3_40mm], [Size0.0_6.3mm] FROM dbo.psm_Product_Samples";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Samples.psm_Product_SamplesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Samples.psm_Product_SamplesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Samples.psm_Product_SamplesDataTable dataTable = new Samples.psm_Product_SamplesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Samples.psm_Product_SamplesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Samples dataSet) {
            return this.Adapter.Update(dataSet, "psm_Product_Samples");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Crusher, 
                    global::System.Nullable<global::System.DateTime> Original_SampledOn, 
                    string Original_SampledUser, 
                    string Original_Shift, 
                    string Original_SampleId, 
                    global::System.Nullable<double> Original_Weightometer, 
                    global::System.Nullable<int> Original_SampleBucket, 
                    global::System.Nullable<int> Original_StackerPosition, 
                    string Original_PrimaryFrom, 
                    global::System.Nullable<int> Original_PrimaryScoops, 
                    string Original_SecondaryFrom, 
                    global::System.Nullable<int> Original_SecondaryScoops, 
                    string Original_To, 
                    string Original_Comments, 
                    string Original_Submission, 
                    string Original_Instructions, 
                    global::System.Nullable<float> Original_Fe, 
                    global::System.Nullable<float> Original_SiO2, 
                    global::System.Nullable<float> Original_Al2O3, 
                    global::System.Nullable<float> Original_P, 
                    global::System.Nullable<float> Original_S, 
                    global::System.Nullable<float> Original_Mn, 
                    global::System.Nullable<float> Original_LOI, 
                    global::System.Nullable<float> Original_TotalMass, 
                    global::System.Nullable<float> p2, 
                    global::System.Nullable<float> p5, 
                    global::System.Nullable<float> p8, 
                    global::System.Nullable<float> p11, 
                    global::System.Nullable<float> p14, 
                    global::System.Nullable<float> p17, 
                    global::System.Nullable<float> Original_Moisture, 
                    global::System.Nullable<global::System.DateTime> Original_SubmittedOn, 
                    string Original_SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedOn, 
                    string Original_DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForPreparation, 
                    string Original_ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedFromPreparationOn, 
                    string Original_DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForAnalysis, 
                    string Original_ArrivedForAnalysisUser, 
                    string Original_LabJobNo, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedOn, 
                    string Original_ReceivedUser, 
                    string Original_Published, 
                    string Original_Action, 
                    string Original_Finger3From, 
                    global::System.Nullable<int> Original_Finger3Scoops, 
                    string Original_Finger4From, 
                    global::System.Nullable<int> Original_Finger4Scoops, 
                    string Original_Finger5From, 
                    global::System.Nullable<int> Original_Finger5Scoops, 
                    string Original_Finger6From, 
                    global::System.Nullable<int> Original_Finger6Scoops, 
                    global::System.Nullable<float> Original_Size40mm, 
                    global::System.Nullable<float> p20, 
                    global::System.Nullable<float> p23) {
            if ((Original_Crusher == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Crusher));
            }
            if ((Original_SampledOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_SampledOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_SampledUser == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SampledUser));
            }
            if ((Original_Shift == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Shift));
            }
            if ((Original_SampleId == null)) {
                throw new global::System.ArgumentNullException("Original_SampleId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SampleId));
            }
            if ((Original_Weightometer.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Weightometer.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_SampleBucket.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_SampleBucket.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_StackerPosition.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_StackerPosition.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_PrimaryFrom == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PrimaryFrom));
            }
            if ((Original_PrimaryScoops.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_PrimaryScoops.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_SecondaryFrom == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_SecondaryFrom));
            }
            if ((Original_SecondaryScoops.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_SecondaryScoops.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_To == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_To));
            }
            if ((Original_Comments == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Comments));
            }
            if ((Original_Submission == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Submission));
            }
            if ((Original_Instructions == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_Instructions));
            }
            if ((Original_Fe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((float)(Original_Fe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_SiO2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((float)(Original_SiO2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Al2O3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((float)(Original_Al2O3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_P.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((float)(Original_P.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_S.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((float)(Original_S.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Mn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((float)(Original_Mn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_LOI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((float)(Original_LOI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalMass.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((float)(Original_TotalMass.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((float)(p2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((float)(p5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((float)(p8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((float)(p11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((float)(p14.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((float)(p17.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Moisture.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((float)(Original_Moisture.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_SubmittedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((System.DateTime)(Original_SubmittedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_SubmittedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_SubmittedUser));
            }
            if ((Original_DespatchedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((System.DateTime)(Original_DespatchedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_DespatchedUser));
            }
            if ((Original_ArrivedForPreparation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((System.DateTime)(Original_ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForPreparationUser == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_ArrivedForPreparationUser));
            }
            if ((Original_DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedFromPreparationUser == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_DespatchedFromPreparationUser));
            }
            if ((Original_ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((System.DateTime)(Original_ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForAnalysisUser == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_ArrivedForAnalysisUser));
            }
            if ((Original_LabJobNo == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_LabJobNo));
            }
            if ((Original_ReceivedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((System.DateTime)(Original_ReceivedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedUser == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_ReceivedUser));
            }
            if ((Original_Published == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_Published));
            }
            if ((Original_Action == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_Action));
            }
            if ((Original_Finger3From == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_Finger3From));
            }
            if ((Original_Finger3Scoops.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((int)(Original_Finger3Scoops.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_Finger4From == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_Finger4From));
            }
            if ((Original_Finger4Scoops.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((int)(Original_Finger4Scoops.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_Finger5From == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_Finger5From));
            }
            if ((Original_Finger5Scoops.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((int)(Original_Finger5Scoops.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_Finger6From == null)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((string)(Original_Finger6From));
            }
            if ((Original_Finger6Scoops.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((int)(Original_Finger6Scoops.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_Size40mm.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((float)(Original_Size40mm.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((p20.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((float)(p20.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((p23.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((float)(p23.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Crusher, 
                    global::System.Nullable<global::System.DateTime> SampledOn, 
                    string SampledUser, 
                    string Shift, 
                    string SampleId, 
                    global::System.Nullable<double> Weightometer, 
                    global::System.Nullable<int> SampleBucket, 
                    global::System.Nullable<int> StackerPosition, 
                    string PrimaryFrom, 
                    global::System.Nullable<int> PrimaryScoops, 
                    string SecondaryFrom, 
                    global::System.Nullable<int> SecondaryScoops, 
                    string To, 
                    string Comments, 
                    string Submission, 
                    string Instructions, 
                    global::System.Nullable<float> Fe, 
                    global::System.Nullable<float> SiO2, 
                    global::System.Nullable<float> Al2O3, 
                    global::System.Nullable<float> P, 
                    global::System.Nullable<float> S, 
                    global::System.Nullable<float> Mn, 
                    global::System.Nullable<float> LOI, 
                    global::System.Nullable<float> TotalMass, 
                    global::System.Nullable<float> p1, 
                    global::System.Nullable<float> p4, 
                    global::System.Nullable<float> p7, 
                    global::System.Nullable<float> p10, 
                    global::System.Nullable<float> p13, 
                    global::System.Nullable<float> p16, 
                    global::System.Nullable<float> Moisture, 
                    global::System.Nullable<global::System.DateTime> SubmittedOn, 
                    string SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedOn, 
                    string DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForPreparation, 
                    string ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedFromPreparationOn, 
                    string DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForAnalysis, 
                    string ArrivedForAnalysisUser, 
                    string LabJobNo, 
                    global::System.Nullable<global::System.DateTime> ReceivedOn, 
                    string ReceivedUser, 
                    string Published, 
                    string Action, 
                    string Finger3From, 
                    global::System.Nullable<int> Finger3Scoops, 
                    string Finger4From, 
                    global::System.Nullable<int> Finger4Scoops, 
                    string Finger5From, 
                    global::System.Nullable<int> Finger5Scoops, 
                    string Finger6From, 
                    global::System.Nullable<int> Finger6Scoops, 
                    global::System.Nullable<float> Size40mm, 
                    global::System.Nullable<float> p19, 
                    global::System.Nullable<float> p22) {
            if ((Crusher == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Crusher));
            }
            if ((SampledOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(SampledOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SampledUser == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SampledUser));
            }
            if ((Shift == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Shift));
            }
            if ((SampleId == null)) {
                throw new global::System.ArgumentNullException("SampleId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SampleId));
            }
            if ((Weightometer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Weightometer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SampleBucket.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(SampleBucket.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((StackerPosition.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(StackerPosition.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PrimaryFrom == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PrimaryFrom));
            }
            if ((PrimaryScoops.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(PrimaryScoops.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SecondaryFrom == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SecondaryFrom));
            }
            if ((SecondaryScoops.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(SecondaryScoops.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((To == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(To));
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Comments));
            }
            if ((Submission == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Submission));
            }
            if ((Instructions == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Instructions));
            }
            if ((Fe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((float)(Fe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SiO2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((float)(SiO2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Al2O3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((float)(Al2O3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((P.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((float)(P.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((S.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((float)(S.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Mn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((float)(Mn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LOI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((float)(LOI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TotalMass.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((float)(TotalMass.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((float)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((float)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((float)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((float)(p10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((float)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((float)(p16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Moisture.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((float)(Moisture.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((SubmittedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(SubmittedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((SubmittedUser == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(SubmittedUser));
            }
            if ((DespatchedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(DespatchedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((DespatchedUser == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(DespatchedUser));
            }
            if ((ArrivedForPreparation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForPreparationUser == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(ArrivedForPreparationUser));
            }
            if ((DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((DespatchedFromPreparationUser == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(DespatchedFromPreparationUser));
            }
            if ((ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((System.DateTime)(ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForAnalysisUser == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(ArrivedForAnalysisUser));
            }
            if ((LabJobNo == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(LabJobNo));
            }
            if ((ReceivedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(ReceivedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ReceivedUser == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(ReceivedUser));
            }
            if ((Published == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(Published));
            }
            if ((Action == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(Action));
            }
            if ((Finger3From == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(Finger3From));
            }
            if ((Finger3Scoops.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((int)(Finger3Scoops.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Finger4From == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Finger4From));
            }
            if ((Finger4Scoops.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((int)(Finger4Scoops.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Finger5From == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Finger5From));
            }
            if ((Finger5Scoops.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(Finger5Scoops.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Finger6From == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(Finger6From));
            }
            if ((Finger6Scoops.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((int)(Finger6Scoops.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Size40mm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((float)(Size40mm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((float)(p19.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((p22.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((float)(p22.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Crusher, 
                    global::System.Nullable<global::System.DateTime> SampledOn, 
                    string SampledUser, 
                    string Shift, 
                    string SampleId, 
                    global::System.Nullable<double> Weightometer, 
                    global::System.Nullable<int> SampleBucket, 
                    global::System.Nullable<int> StackerPosition, 
                    string PrimaryFrom, 
                    global::System.Nullable<int> PrimaryScoops, 
                    string SecondaryFrom, 
                    global::System.Nullable<int> SecondaryScoops, 
                    string To, 
                    string Comments, 
                    string Submission, 
                    string Instructions, 
                    global::System.Nullable<float> Fe, 
                    global::System.Nullable<float> SiO2, 
                    global::System.Nullable<float> Al2O3, 
                    global::System.Nullable<float> P, 
                    global::System.Nullable<float> S, 
                    global::System.Nullable<float> Mn, 
                    global::System.Nullable<float> LOI, 
                    global::System.Nullable<float> TotalMass, 
                    global::System.Nullable<float> p1, 
                    global::System.Nullable<float> p4, 
                    global::System.Nullable<float> p7, 
                    global::System.Nullable<float> p10, 
                    global::System.Nullable<float> p13, 
                    global::System.Nullable<float> p16, 
                    global::System.Nullable<float> Moisture, 
                    global::System.Nullable<global::System.DateTime> SubmittedOn, 
                    string SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedOn, 
                    string DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForPreparation, 
                    string ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedFromPreparationOn, 
                    string DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForAnalysis, 
                    string ArrivedForAnalysisUser, 
                    string LabJobNo, 
                    global::System.Nullable<global::System.DateTime> ReceivedOn, 
                    string ReceivedUser, 
                    string Published, 
                    string Action, 
                    string Finger3From, 
                    global::System.Nullable<int> Finger3Scoops, 
                    string Finger4From, 
                    global::System.Nullable<int> Finger4Scoops, 
                    string Finger5From, 
                    global::System.Nullable<int> Finger5Scoops, 
                    string Finger6From, 
                    global::System.Nullable<int> Finger6Scoops, 
                    global::System.Nullable<float> Size40mm, 
                    global::System.Nullable<float> p19, 
                    global::System.Nullable<float> p22, 
                    string Original_Crusher, 
                    global::System.Nullable<global::System.DateTime> Original_SampledOn, 
                    string Original_SampledUser, 
                    string Original_Shift, 
                    string Original_SampleId, 
                    global::System.Nullable<double> Original_Weightometer, 
                    global::System.Nullable<int> Original_SampleBucket, 
                    global::System.Nullable<int> Original_StackerPosition, 
                    string Original_PrimaryFrom, 
                    global::System.Nullable<int> Original_PrimaryScoops, 
                    string Original_SecondaryFrom, 
                    global::System.Nullable<int> Original_SecondaryScoops, 
                    string Original_To, 
                    string Original_Comments, 
                    string Original_Submission, 
                    string Original_Instructions, 
                    global::System.Nullable<float> Original_Fe, 
                    global::System.Nullable<float> Original_SiO2, 
                    global::System.Nullable<float> Original_Al2O3, 
                    global::System.Nullable<float> Original_P, 
                    global::System.Nullable<float> Original_S, 
                    global::System.Nullable<float> Original_Mn, 
                    global::System.Nullable<float> Original_LOI, 
                    global::System.Nullable<float> Original_TotalMass, 
                    global::System.Nullable<float> p2, 
                    global::System.Nullable<float> p5, 
                    global::System.Nullable<float> p8, 
                    global::System.Nullable<float> p11, 
                    global::System.Nullable<float> p14, 
                    global::System.Nullable<float> p17, 
                    global::System.Nullable<float> Original_Moisture, 
                    global::System.Nullable<global::System.DateTime> Original_SubmittedOn, 
                    string Original_SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedOn, 
                    string Original_DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForPreparation, 
                    string Original_ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedFromPreparationOn, 
                    string Original_DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForAnalysis, 
                    string Original_ArrivedForAnalysisUser, 
                    string Original_LabJobNo, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedOn, 
                    string Original_ReceivedUser, 
                    string Original_Published, 
                    string Original_Action, 
                    string Original_Finger3From, 
                    global::System.Nullable<int> Original_Finger3Scoops, 
                    string Original_Finger4From, 
                    global::System.Nullable<int> Original_Finger4Scoops, 
                    string Original_Finger5From, 
                    global::System.Nullable<int> Original_Finger5Scoops, 
                    string Original_Finger6From, 
                    global::System.Nullable<int> Original_Finger6Scoops, 
                    global::System.Nullable<float> Original_Size40mm, 
                    global::System.Nullable<float> p20, 
                    global::System.Nullable<float> p23) {
            if ((Crusher == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Crusher));
            }
            if ((SampledOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(SampledOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SampledUser == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SampledUser));
            }
            if ((Shift == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Shift));
            }
            if ((SampleId == null)) {
                throw new global::System.ArgumentNullException("SampleId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SampleId));
            }
            if ((Weightometer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Weightometer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SampleBucket.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(SampleBucket.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((StackerPosition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(StackerPosition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PrimaryFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(PrimaryFrom));
            }
            if ((PrimaryScoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(PrimaryScoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SecondaryFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SecondaryFrom));
            }
            if ((SecondaryScoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(SecondaryScoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((To == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(To));
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Comments));
            }
            if ((Submission == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Submission));
            }
            if ((Instructions == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Instructions));
            }
            if ((Fe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(Fe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SiO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((float)(SiO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Al2O3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((float)(Al2O3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((P.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((float)(P.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((float)(S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Mn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((float)(Mn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LOI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((float)(LOI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TotalMass.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((float)(TotalMass.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((p1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((float)(p1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((float)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((float)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((float)(p10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((float)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((float)(p16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Moisture.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((float)(Moisture.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((SubmittedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(SubmittedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((SubmittedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(SubmittedUser));
            }
            if ((DespatchedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(DespatchedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((DespatchedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(DespatchedUser));
            }
            if ((ArrivedForPreparation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(ArrivedForPreparationUser));
            }
            if ((DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((DespatchedFromPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(DespatchedFromPreparationUser));
            }
            if ((ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ArrivedForAnalysisUser == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(ArrivedForAnalysisUser));
            }
            if ((LabJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(LabJobNo));
            }
            if ((ReceivedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(ReceivedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ReceivedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(ReceivedUser));
            }
            if ((Published == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Published));
            }
            if ((Action == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Action));
            }
            if ((Finger3From == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Finger3From));
            }
            if ((Finger3Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Finger3Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Finger4From == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Finger4From));
            }
            if ((Finger4Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Finger4Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Finger5From == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Finger5From));
            }
            if ((Finger5Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Finger5Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Finger6From == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Finger6From));
            }
            if ((Finger6Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Finger6Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Size40mm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((float)(Size40mm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((float)(p19.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((p22.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((float)(p22.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Crusher == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Crusher));
            }
            if ((Original_SampledOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(Original_SampledOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_SampledUser == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_SampledUser));
            }
            if ((Original_Shift == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_Shift));
            }
            if ((Original_SampleId == null)) {
                throw new global::System.ArgumentNullException("Original_SampleId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_SampleId));
            }
            if ((Original_Weightometer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(Original_Weightometer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_SampleBucket.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_SampleBucket.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_StackerPosition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_StackerPosition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_PrimaryFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_PrimaryFrom));
            }
            if ((Original_PrimaryScoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_PrimaryScoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_SecondaryFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_SecondaryFrom));
            }
            if ((Original_SecondaryScoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_SecondaryScoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_To == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_To));
            }
            if ((Original_Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_Comments));
            }
            if ((Original_Submission == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_Submission));
            }
            if ((Original_Instructions == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_Instructions));
            }
            if ((Original_Fe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((float)(Original_Fe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_SiO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((float)(Original_SiO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_Al2O3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((float)(Original_Al2O3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_P.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((float)(Original_P.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((float)(Original_S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_Mn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((float)(Original_Mn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_LOI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((float)(Original_LOI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalMass.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((float)(Original_TotalMass.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((float)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((float)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((float)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((float)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((float)(p14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((float)(p17.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_Moisture.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((float)(Original_Moisture.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_SubmittedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((System.DateTime)(Original_SubmittedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_SubmittedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_SubmittedUser));
            }
            if ((Original_DespatchedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((System.DateTime)(Original_DespatchedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_DespatchedUser));
            }
            if ((Original_ArrivedForPreparation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((System.DateTime)(Original_ArrivedForPreparation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_ArrivedForPreparationUser));
            }
            if ((Original_DespatchedFromPreparationOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((System.DateTime)(Original_DespatchedFromPreparationOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_DespatchedFromPreparationUser == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Original_DespatchedFromPreparationUser));
            }
            if ((Original_ArrivedForAnalysis.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((System.DateTime)(Original_ArrivedForAnalysis.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_ArrivedForAnalysisUser == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_ArrivedForAnalysisUser));
            }
            if ((Original_LabJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_LabJobNo));
            }
            if ((Original_ReceivedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((System.DateTime)(Original_ReceivedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedUser == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_ReceivedUser));
            }
            if ((Original_Published == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_Published));
            }
            if ((Original_Action == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_Action));
            }
            if ((Original_Finger3From == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_Finger3From));
            }
            if ((Original_Finger3Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((int)(Original_Finger3Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_Finger4From == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_Finger4From));
            }
            if ((Original_Finger4Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((int)(Original_Finger4Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_Finger5From == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_Finger5From));
            }
            if ((Original_Finger5Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((int)(Original_Finger5Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_Finger6From == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_Finger6From));
            }
            if ((Original_Finger6Scoops.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((int)(Original_Finger6Scoops.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_Size40mm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((float)(Original_Size40mm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((p20.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((float)(p20.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((p23.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((float)(p23.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Crusher, 
                    global::System.Nullable<global::System.DateTime> SampledOn, 
                    string SampledUser, 
                    string Shift, 
                    global::System.Nullable<double> Weightometer, 
                    global::System.Nullable<int> SampleBucket, 
                    global::System.Nullable<int> StackerPosition, 
                    string PrimaryFrom, 
                    global::System.Nullable<int> PrimaryScoops, 
                    string SecondaryFrom, 
                    global::System.Nullable<int> SecondaryScoops, 
                    string To, 
                    string Comments, 
                    string Submission, 
                    string Instructions, 
                    global::System.Nullable<float> Fe, 
                    global::System.Nullable<float> SiO2, 
                    global::System.Nullable<float> Al2O3, 
                    global::System.Nullable<float> P, 
                    global::System.Nullable<float> S, 
                    global::System.Nullable<float> Mn, 
                    global::System.Nullable<float> LOI, 
                    global::System.Nullable<float> TotalMass, 
                    global::System.Nullable<float> p1, 
                    global::System.Nullable<float> p4, 
                    global::System.Nullable<float> p7, 
                    global::System.Nullable<float> p10, 
                    global::System.Nullable<float> p13, 
                    global::System.Nullable<float> p16, 
                    global::System.Nullable<float> Moisture, 
                    global::System.Nullable<global::System.DateTime> SubmittedOn, 
                    string SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedOn, 
                    string DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForPreparation, 
                    string ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> DespatchedFromPreparationOn, 
                    string DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> ArrivedForAnalysis, 
                    string ArrivedForAnalysisUser, 
                    string LabJobNo, 
                    global::System.Nullable<global::System.DateTime> ReceivedOn, 
                    string ReceivedUser, 
                    string Published, 
                    string Action, 
                    string Finger3From, 
                    global::System.Nullable<int> Finger3Scoops, 
                    string Finger4From, 
                    global::System.Nullable<int> Finger4Scoops, 
                    string Finger5From, 
                    global::System.Nullable<int> Finger5Scoops, 
                    string Finger6From, 
                    global::System.Nullable<int> Finger6Scoops, 
                    global::System.Nullable<float> Size40mm, 
                    global::System.Nullable<float> p19, 
                    global::System.Nullable<float> p22, 
                    string Original_Crusher, 
                    global::System.Nullable<global::System.DateTime> Original_SampledOn, 
                    string Original_SampledUser, 
                    string Original_Shift, 
                    string Original_SampleId, 
                    global::System.Nullable<double> Original_Weightometer, 
                    global::System.Nullable<int> Original_SampleBucket, 
                    global::System.Nullable<int> Original_StackerPosition, 
                    string Original_PrimaryFrom, 
                    global::System.Nullable<int> Original_PrimaryScoops, 
                    string Original_SecondaryFrom, 
                    global::System.Nullable<int> Original_SecondaryScoops, 
                    string Original_To, 
                    string Original_Comments, 
                    string Original_Submission, 
                    string Original_Instructions, 
                    global::System.Nullable<float> Original_Fe, 
                    global::System.Nullable<float> Original_SiO2, 
                    global::System.Nullable<float> Original_Al2O3, 
                    global::System.Nullable<float> Original_P, 
                    global::System.Nullable<float> Original_S, 
                    global::System.Nullable<float> Original_Mn, 
                    global::System.Nullable<float> Original_LOI, 
                    global::System.Nullable<float> Original_TotalMass, 
                    global::System.Nullable<float> p2, 
                    global::System.Nullable<float> p5, 
                    global::System.Nullable<float> p8, 
                    global::System.Nullable<float> p11, 
                    global::System.Nullable<float> p14, 
                    global::System.Nullable<float> p17, 
                    global::System.Nullable<float> Original_Moisture, 
                    global::System.Nullable<global::System.DateTime> Original_SubmittedOn, 
                    string Original_SubmittedUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedOn, 
                    string Original_DespatchedUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForPreparation, 
                    string Original_ArrivedForPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_DespatchedFromPreparationOn, 
                    string Original_DespatchedFromPreparationUser, 
                    global::System.Nullable<global::System.DateTime> Original_ArrivedForAnalysis, 
                    string Original_ArrivedForAnalysisUser, 
                    string Original_LabJobNo, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedOn, 
                    string Original_ReceivedUser, 
                    string Original_Published, 
                    string Original_Action, 
                    string Original_Finger3From, 
                    global::System.Nullable<int> Original_Finger3Scoops, 
                    string Original_Finger4From, 
                    global::System.Nullable<int> Original_Finger4Scoops, 
                    string Original_Finger5From, 
                    global::System.Nullable<int> Original_Finger5Scoops, 
                    string Original_Finger6From, 
                    global::System.Nullable<int> Original_Finger6Scoops, 
                    global::System.Nullable<float> Original_Size40mm, 
                    global::System.Nullable<float> p20, 
                    global::System.Nullable<float> p23) {
            return this.Update(Crusher, SampledOn, SampledUser, Shift, Original_SampleId, Weightometer, SampleBucket, StackerPosition, PrimaryFrom, PrimaryScoops, SecondaryFrom, SecondaryScoops, To, Comments, Submission, Instructions, Fe, SiO2, Al2O3, P, S, Mn, LOI, TotalMass, p1, p4, p7, p10, p13, p16, Moisture, SubmittedOn, SubmittedUser, DespatchedOn, DespatchedUser, ArrivedForPreparation, ArrivedForPreparationUser, DespatchedFromPreparationOn, DespatchedFromPreparationUser, ArrivedForAnalysis, ArrivedForAnalysisUser, LabJobNo, ReceivedOn, ReceivedUser, Published, Action, Finger3From, Finger3Scoops, Finger4From, Finger4Scoops, Finger5From, Finger5Scoops, Finger6From, Finger6Scoops, Size40mm, p19, p22, Original_Crusher, Original_SampledOn, Original_SampledUser, Original_Shift, Original_SampleId, Original_Weightometer, Original_SampleBucket, Original_StackerPosition, Original_PrimaryFrom, Original_PrimaryScoops, Original_SecondaryFrom, Original_SecondaryScoops, Original_To, Original_Comments, Original_Submission, Original_Instructions, Original_Fe, Original_SiO2, Original_Al2O3, Original_P, Original_S, Original_Mn, Original_LOI, Original_TotalMass, p2, p5, p8, p11, p14, p17, Original_Moisture, Original_SubmittedOn, Original_SubmittedUser, Original_DespatchedOn, Original_DespatchedUser, Original_ArrivedForPreparation, Original_ArrivedForPreparationUser, Original_DespatchedFromPreparationOn, Original_DespatchedFromPreparationUser, Original_ArrivedForAnalysis, Original_ArrivedForAnalysisUser, Original_LabJobNo, Original_ReceivedOn, Original_ReceivedUser, Original_Published, Original_Action, Original_Finger3From, Original_Finger3Scoops, Original_Finger4From, Original_Finger4Scoops, Original_Finger5From, Original_Finger5Scoops, Original_Finger6From, Original_Finger6Scoops, Original_Size40mm, p20, p23);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private gcv_Hole_CollarsTableAdapter _gcv_Hole_CollarsTableAdapter;
        
        private psm_Product_SamplesTableAdapter _psm_Product_SamplesTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public gcv_Hole_CollarsTableAdapter gcv_Hole_CollarsTableAdapter {
            get {
                return this._gcv_Hole_CollarsTableAdapter;
            }
            set {
                this._gcv_Hole_CollarsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public psm_Product_SamplesTableAdapter psm_Product_SamplesTableAdapter {
            get {
                return this._psm_Product_SamplesTableAdapter;
            }
            set {
                this._psm_Product_SamplesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._gcv_Hole_CollarsTableAdapter != null) 
                            && (this._gcv_Hole_CollarsTableAdapter.Connection != null))) {
                    return this._gcv_Hole_CollarsTableAdapter.Connection;
                }
                if (((this._psm_Product_SamplesTableAdapter != null) 
                            && (this._psm_Product_SamplesTableAdapter.Connection != null))) {
                    return this._psm_Product_SamplesTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._gcv_Hole_CollarsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._psm_Product_SamplesTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(Samples dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._gcv_Hole_CollarsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.gcv_Hole_Collars.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gcv_Hole_CollarsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._psm_Product_SamplesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.psm_Product_Samples.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._psm_Product_SamplesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(Samples dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._gcv_Hole_CollarsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.gcv_Hole_Collars.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gcv_Hole_CollarsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._psm_Product_SamplesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.psm_Product_Samples.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._psm_Product_SamplesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(Samples dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._psm_Product_SamplesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.psm_Product_Samples.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._psm_Product_SamplesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gcv_Hole_CollarsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.gcv_Hole_Collars.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gcv_Hole_CollarsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(Samples dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._gcv_Hole_CollarsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gcv_Hole_CollarsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._psm_Product_SamplesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._psm_Product_SamplesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._gcv_Hole_CollarsTableAdapter != null)) {
                    revertConnections.Add(this._gcv_Hole_CollarsTableAdapter, this._gcv_Hole_CollarsTableAdapter.Connection);
                    this._gcv_Hole_CollarsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gcv_Hole_CollarsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gcv_Hole_CollarsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gcv_Hole_CollarsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gcv_Hole_CollarsTableAdapter.Adapter);
                    }
                }
                if ((this._psm_Product_SamplesTableAdapter != null)) {
                    revertConnections.Add(this._psm_Product_SamplesTableAdapter, this._psm_Product_SamplesTableAdapter.Connection);
                    this._psm_Product_SamplesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._psm_Product_SamplesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._psm_Product_SamplesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._psm_Product_SamplesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._psm_Product_SamplesTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._gcv_Hole_CollarsTableAdapter != null)) {
                    this._gcv_Hole_CollarsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gcv_Hole_CollarsTableAdapter]));
                    this._gcv_Hole_CollarsTableAdapter.Transaction = null;
                }
                if ((this._psm_Product_SamplesTableAdapter != null)) {
                    this._psm_Product_SamplesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._psm_Product_SamplesTableAdapter]));
                    this._psm_Product_SamplesTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591